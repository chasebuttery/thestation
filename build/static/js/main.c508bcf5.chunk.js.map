{"version":3,"sources":["Images/Icons/Content.png","Images/Icons/fakeouticon.png","Images/Icons/trivia.png","Images/Icons/discussion.png","Images/Icons/prof.png","Images/stationappdemo.png","Images/Icons/game.png","Images/Icons/teamup.png","Images/Rocket/r.png","Images/Rocket/r1.png","Images/Rocket/r2.png","Images/Miami.png","Images/Tenno.png","Images/Individual.png","Images/Rocket/rocket32p.png","Images/Icons/profile.png","Images/Icons/logof.png","Images/Icons/menu1.png","firebase.js","Auth.js","Backend/UsersDB.js","Pages/Home/Cards/CreateInfoCard.js","Pages/Home/Cards/JoinInfoCard.js","Pages/Home/Cards/FindInfoCard.js","Pages/Home/HomePage.js","Pages/Profile/ProfilePage.js","Backend/StationsDB.js","Pages/Create/CreatePage.js","Components/Content/ContentEditor/ContentInputCard.js","Components/Fakeout/FakeoutEditor/FakeoutInputCard.js","Components/MultipleChoice/MCEditor/MultipleChoiceInputCard.js","Pages/Create/CreateStation/SequenceBar/StationSequence.js","Components/Discussion/DiscussionEditor/DiscussionInputCard.js","Pages/Create/CreateStation/CreateStationPage.js","Backend/SessionsDB.js","Components/Station/StationCard.js","Pages/Find/FindPage.js","Pages/Join/JoinPage.js","Pages/MyStations/MyStationsPage.js","Components/Users/User.js","Components/Users/UsersList.js","Components/Content/ContentPlayer/Host.js","Components/Fakeout/FakeoutPlayer/Host.js","Components/MultipleChoice/MCPlayer/Host.js","Components/EndGame/Host.js","Components/Discussion/DiscussionPlayer/Host.js","GamePlay/GameHostPage.js","Components/Content/ContentPlayer/User.js","Components/Fakeout/FakeoutPlayer/User.js","Components/MultipleChoice/MCPlayer/User.js","Components/EndGame/User.js","Components/Discussion/DiscussionPlayer/User.js","Components/Player/PlayerEditor.js","GamePlay/GameUserPage.js","Routes.js","NavBar/NavBar.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","localStorage","getItem","ProImg","console","log","user","userName","photoURL","displayName","firestore","collection","doc","set","name","state","country","then","catch","error","setItem","id_token","access_token","token","CreateInfoCard","history","useHistory","className","onClick","e","push","src","ContentIcon","GamesIcon","ActivityIcon","Rocket4","RocketIcon","Rocket32","FindInfoCard","CompaniesIcon","CollegesIcon","IndividualsIcon","HomePage","StationLogo","SignInPage","provider","auth","GoogleAuthProvider","signInWithPopup","result","credential","accessToken","Auth","window","location","reload","code","message","email","signOut","clear","station","newID","a","profileImg","stationID","creatorID","creatorImage","title","category","description","docRef","getStationData","stationData","get","exists","data","docData","getStationList","stations","CreatePage","useState","setStation","id","type","onChange","event","titleValue","target","value","curActivity","categoryValue","descriptionValue","Math","random","toString","substring","floor","createStation","preventDefault","ContentInputCard","props","updateData","currentTarget","file","files","storageRef","storage","ref","imgName","child","put","snapshot","vidName","fileName","AddFakeout","QuestionForm","numOptions","answerField","checked","checkbox","field","htmlFor","map","num","key","StationSequence","slides","setSlide","element","question","MultipleChoiceIcon","FakeoutIcon","DiscussionIcon","itemCard","DiscussionInputCard","CreateStationPage","match","params","setSlides","slideNum","setSlideNum","rand","setRand","dataDirty","setDataDirty","selectedValue","useEffect","loadStation","addSlide","length","A","B","C","D","Aans","Bans","Cans","Dans","q","update","updateSlides","TriviaIcon","sessionID","Data","MetaData","userID","responseData","responses","addToPlayerScore","score","increment","FieldValue","hostName","hostImg","gameOver","handleUsersRefresh","onSnapshot","getSessionData","handleSessionRefresh","newUserID","StationCard","showImg","setShowImg","img","setImg","undefined","starsRef","getDownloadURL","url","downloadImg","width","height","createSession","FindPage","setStations","list","docs","getStations","JoinPage","setSessionID","setUser","onSubmit","addUserToSession","curUser","nameValue","MyStationsPage","User","Users","users","Host","contentID","vid","setVid","showVid","setShowVid","substr","controls","slideData","slideState","userData","slideNumber","setState","metaData","setData","responseCount","voteCount","votes","i","answer","vote","multipleChoiceHost","b","c","d","aans","bans","cans","dans","Submit","Number","points","scoreChange","Answer","text","color","isAnswer","correct","highScore","setHighScore","scorer","setScorer","getWinner","updateState","GameHostPage","session","setSession","setUsers","handleSessionChange","sessionData","setSlideState","getUsersList","getStation","setMetaData","incrementSlide","setGameOverDB","updateResponse","localState","setLocalState","response","setResponse","class","MultipleChoiceUser","State","setCorrect","submit","submitResponse","PlayerEditor","Player","GameUserPage","onUserUpdate","newResponses","addUserResponse","listener","snap","listenUserData","Routes","exact","path","component","ProfilePage","NavBar","isExpanded","setIsExpanded","profileIcon","setProfileIcon","expandNavbar","getProfileImg","NavMenu","to","Logo","activeClassName","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,qC,sBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,4DCA3CD,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,uiBCczCC,IAASC,cAZY,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMFT,QAAf,E,qBCZa,aAEX,OAAOU,aAAaC,QAAQ,eAAiBC,KAFlC,aAMX,OAAOF,aAAaC,QAAQ,aANjB,aAYXE,QAAQC,IAAI,qBAZD,WAgBHC,GCdL,IAAmBC,EDetBH,QAAQC,IAAIC,EAAKE,UCfKD,EDiBbD,EAAKG,YChBhBlB,IACGmB,YACAC,WAAW,SACXC,IAAIL,GACJM,IAAI,CACHC,KAAM,QACNC,MAAO,KACPC,QAAS,QAEVC,MAAK,WACJb,QAAQC,IAAI,qCAEba,OAAM,SAAUC,GACff,QAAQe,MAAM,2BAA4BA,MDK5ClB,aAAamB,QAAQ,WAAYd,EAAKG,aACtCR,aAAamB,QAAQ,aAAcd,EAAKE,UACxCP,aAAamB,QAAQ,UAAWd,EAAKe,UACrCpB,aAAamB,QAAQ,cAAed,EAAKgB,eAxB9B,WA0BFC,GACTnB,QAAQC,IAAI,WAAakB,GACzBtB,aAAamB,QAAQ,QAASG,I,kFExBnB,SAASC,IACtB,IAAMC,EAAUC,cAEhB,OACE,yBAAKC,UAAU,iBAAiBC,QAAW,SAAAC,GAAMJ,EAAQK,KAAK,aAE5D,uCACA,wGACE,yBAAKH,UAAU,SACb,yBAAKA,UAAW,WAChB,yBAAKA,UAAU,OAAOI,IAAKC,MAD3B,WAIF,yBAAKL,UAAW,QAClB,yBAAKA,UAAU,OAAOI,IAAKE,MADzB,SAIF,yBAAKN,UAAW,YAChB,yBAAKA,UAAU,OAAOI,IAAKG,MAD3B,gB,6DClBS,SAASV,IACtB,IAAMC,EAAUC,cAEhB,OACE,yBAAKC,UAAU,eAAeC,QAAW,SAAAC,GAAMJ,EAAQK,KAAK,WAE1D,qCACA,+EACA,yBAAKH,UAAU,SACf,yBAAKA,UAAU,OAAOI,IAAKI,MAC3B,yBAAKR,UAAU,OAAOI,IAAKK,MAC3B,yBAAKT,UAAU,OAAOI,IAAKM,Q,6DCXlB,SAASC,IACtB,IAAMb,EAAUC,cAEhB,OACE,yBAAKC,UAAU,eAAeC,QAAW,SAAAC,GAAMJ,EAAQK,KAAK,WAE1D,qCACA,sGACA,yBAAKH,UAAU,SACf,yBAAKA,UAAU,OAAOI,IAAKQ,MAC3B,yBAAKZ,UAAU,OAAOI,IAAKS,MAC3B,yBAAKb,UAAU,OAAOI,IAAKU,QCVlB,SAASC,IACNhB,cAEhB,OACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,WAAWI,IAAKY,MAC/B,wBAAIhB,UAAY,WAAhB,gCAEC,uBAAGA,UAAW,UAAd,wFAEA,yBAAKA,UAAY,YAElB,yBAAKA,UAAW,QAChB,kBAAC,EAAD,MACA,yBAAKA,UAAY,YACjB,kBAAC,EAAD,MACA,yBAAKA,UAAY,YACjB,kBAAC,EAAD,Q,MCnBS,SAASiB,IACtB,IAAIC,EAAW,IAAItD,EAASuD,KAAKC,mBAiDjC,OACE,yBAAKpB,UAAU,eACb,uCACA,6DACA,yBAAKA,UAAU,mBACb,4BAAQA,UAAY,eAAeC,QApDzC,WACErC,EACGuD,OACAE,gBAAgBH,GAChB5B,MAAK,SAAUgC,GAEd,IAAI1B,EAAQ0B,EAAOC,WAAWC,YAE1B7C,EAAO2C,EAAO3C,KAGlB8C,EAAc9C,GACd8C,EAAe7B,GACf6B,IACAC,OAAOC,SAASC,YAEjBrC,OAAM,SAAUC,GAECA,EAAMqC,KACHrC,EAAMsC,QAEbtC,EAAMuC,MAEDvC,EAAM+B,WAEvB9C,QAAQC,IAAI,6BA2BZ,qBACA,4BAAQsB,UAAY,gBAAgBC,QAvB1C,WACErC,EACGuD,OACAa,UACA1C,MAAK,WACJb,QAAQC,IAAI,cAEZgD,OAAOC,SAASC,SAChBtD,aAAa2D,WAGd1C,OAAM,SAAUC,GAEff,QAAQC,IAAI,+BAUZ,uB,sFCpBD,WAA8BwD,EAASC,GAAvC,iBAAAC,EAAA,sDACL3D,QAAQC,IAAI,4BACNE,EAAW6C,IACXY,EAAaZ,IAEA7D,EAChBmB,YACAC,WAAW,YACXC,IAAIkD,GACJjD,IAAI,CACHoD,UAAWH,EACXI,UAAW3D,EACX4D,aAAcH,EACdI,MAAOP,EAAQO,MACfC,SAAUR,EAAQQ,SAClBC,YAAaT,EAAQS,cAEtBrD,MAAK,SAAUsD,OAGfrD,OAAM,SAAUC,GACff,QAAQe,MAAM,0BAA2BA,MArBxC,4C,sBAuEA,SAAeqD,EAAtB,kC,4CAAO,WAA+BP,GAA/B,mBAAAF,EAAA,6DACDQ,EAAShF,EACVmB,YACAC,WAAW,YACXC,IAAIqD,GAIDQ,EAAcF,EACjBG,MACAzD,MAAK,SAAUL,GACd,OAAIA,EAAI+D,QACNvE,QAAQC,IAAI,iBAAkBO,EAAIgE,QAClCC,EAAUjE,EAAIgE,SAIdxE,QAAQC,IAAI,qBACLwE,MAGV3D,OAAM,SAAUC,GACff,QAAQC,IAAI,0BAA2Bc,MAtBtC,kBAwBEsD,GAxBF,4C,sBAkCA,SAAeK,IAAtB,+B,4CAAO,4BAAAf,EAAA,6DACCgB,EAAWxF,EAASmB,YAAYC,WAAW,YAAY+D,MADxD,kBAEEK,GAFF,4C,4BC9IQ,SAASC,IAAe,IAAD,EACNC,mBAAS,CACrChB,UAAW,GACXG,MAAO,GACPC,SAAU,GACVC,YAAa,KALqB,mBAC7BT,EAD6B,KACpBqB,EADoB,KAQ9BzD,EAAUC,cAqDhB,OACE,yBAAKC,UAAU,cACb,sCACA,wGAIA,0BAAMA,UAAU,kBACd,yBAAKA,UAAU,SACb,0CACA,2BAAOwD,GAAG,QAAQC,KAAK,OAAOtE,KAAK,QAAQuE,SA7DnD,SAA4BC,GAC1B,IAAMC,EAAaD,EAAME,OAAOC,MAChCP,GAAW,SAAAQ,GACT,OAAO,eACFA,EADL,CAEEtB,MAAOmB,WA0DP,yBAAK5D,UAAU,SACb,6CACA,2BAAOwD,GAAG,WAAWC,KAAK,OAAOtE,KAAK,WAAWuE,SAxDzD,SAA+BC,GAC7B,IAAMK,EAAgBL,EAAME,OAAOC,MACnCP,GAAW,SAAAQ,GACT,OAAO,eACFA,EADL,CAEErB,SAAUsB,WAqDV,yBAAKhE,UAAU,SACb,gDACA,2BAAOyD,KAAK,OAAOtE,KAAK,cAAcuE,SAnD9C,SAAkCC,GAChC,IAAMM,EAAmBN,EAAME,OAAOC,MACtCP,GAAW,SAAAQ,GACT,OAAO,eACFA,EADL,CAEEpB,YAAasB,WAgDb,4BAAQjE,UAAU,eAAeyD,KAAK,SAASxD,QA3CrD,SAA6B0D,GAG3B,IAMMxB,EALJ,UACA+B,KAAKC,SACFC,SAAS,IACTC,UAAU,GACEH,KAAKI,MAAM,IAAuB,IAAhBJ,KAAKC,UAGxCZ,GAAW,SAAAQ,GACT,OAAO,eACFA,EADL,CAEEzB,UAAWH,ODfZ,SAAP,6BCkBIoC,CAAcrC,EAASC,GAEvBrC,EAAQK,KAAK,WAAagC,GAC1BwB,EAAMa,mBAuBF,uB,yBC/EO,SAASC,GAAkBC,GAAQ,IACzCzB,EAAoByB,EAApBzB,KAAM0B,EAAcD,EAAdC,WA2Db,OACE,yBAAK3E,UAAU,oBACb,0BAAMA,UAAU,gBAEd,wCACA,2BAAOwD,GAAK,QAAQC,KAAK,OAAOK,MAAOb,EAAI,MAAYS,SAAU,SAAAxD,GAAMyE,EAAW,QAASzE,EAAE0E,cAAcd,UAE3G,yBAAK9D,UAAU,UACT,yBAAKA,UAAU,SACb,6CACE,2BAAOwD,GAAG,MAAMC,KAAK,OAAOtE,KAAK,UAAUuE,SAjE3D,SAAkBC,GAChB,IAAIkB,EAAOlB,EAAME,OAAOiB,MAAM,GAG1BC,EAAanH,EAASoH,UAAUC,MAWhCC,EAPF,MACAhB,KAAKC,SACFC,SAAS,IACTC,UAAU,GAEFH,KAAKI,MAAM,IAAuB,IAAhBJ,KAAKC,UAIpCQ,EAAW,WAAYO,GAGFH,EAAWI,MAAM,UAAYD,EAAU,QAE7CE,IAAIP,GAAMvF,MAAK,SAAU+F,WA6ChC,yBAAKrF,UAAU,SACX,6CACA,2BAAOwD,GAAK,MAAMC,KAAK,OAAOtE,KAAK,UAAUuE,SA1C3D,SAAkBC,GAChB,IAAIkB,EAAOlB,EAAME,OAAOiB,MAAM,GAG1BC,EAAanH,EAASoH,UAAUC,MAWhCK,EAPF,MACApB,KAAKC,SACFC,SAAS,IACTC,UAAU,GAEFH,KAAKI,MAAM,IAAuB,IAAhBJ,KAAKC,UAIpCQ,EAAW,WAAYW,GAGFP,EAAWI,MAAM,UAAYG,EAAU,QAE7CF,IAAIP,GAAMvF,MAAK,SAAU+F,aA0BnB,KAAlBpC,EAAKsC,UAAmBtC,EAAKsC,U,MCnFrB,SAASC,GAAYd,GAAQ,IAEnCzB,EAAoByB,EAApBzB,KAAM0B,EAAcD,EAAdC,WAEb,OACE,yBAAK3E,UAAU,oBACX,yBAAKA,UAAY,SACf,2BAAOA,UAAY,SAAnB,0BACA,2BAAOwD,GAAK,WAAWC,KAAK,OAAOK,MAAOb,EAAI,SAAeS,SAAU,SAAAxD,GAAMyE,EAAW,WAAYzE,EAAE0E,cAAcd,WAEtH,yBAAK9D,UAAY,SACf,2BAAOA,UAAY,SAAnB,wBACA,2BAAOwD,GAAK,SAASC,KAAK,OAAOK,MAAOb,EAAI,OAAYS,SAAU,SAAAxD,GAAMyE,EAAW,SAAUzE,EAAE0E,cAAcd,Y,UCsExG2B,GAnFM,SAACf,GAAU,IACrBzB,EAAoByB,EAApBzB,KAAM0B,EAAcD,EAAdC,WADc,EAELrB,qBAFK,gCAGSA,mBAAS,CAAC,EAAE,EAAE,GAAG,OAH1B,mBAGpBoC,EAHoB,UAW3B,SAASC,EAAanC,GAClB,OACI,yBAAKxD,UAAU,UACX,6BACA,+BAAQwD,GACR,2BAAOxD,UAAU,SAR7B,SAAmBwD,GACf,OAAO,2BAAOC,KAAK,WAAWmC,QAAS3C,EAAKO,GAAKE,SAAU,SAAAxD,GAAOyE,EAAWnB,EAAItD,EAAE0E,cAAcgB,YAQpFC,CAASrC,EAAK,SAGnB,yBAAKxD,UAAU,eAf3B,SAAgBwD,GACZ,OAAQ,2BAAOxD,UAAY,cAAcyD,KAAK,OAAOD,GAAIA,EAAIM,MAAOb,EAAKO,GAAKE,SAAU,SAAAxD,GAAMyE,EAAWnB,EAAItD,EAAE0E,cAAcd,UAehHgC,CAAMtC,KAMvB,OACI,yBAAKxD,UAAU,2BACX,0BAAMA,UAAY,UACd,yBAAKA,UAAU,YACX,yBAAKA,UAAU,SACX,2BAAO+F,QAAQ,YAAf,YACA,2BAAOtC,KAAK,OAAOD,GAAG,WAAWM,MAAOb,EAAI,SAAcS,SAAU,SAAAxD,GAAMyE,EAAW,WAAYzE,EAAE0E,cAAcd,YAGzH,yBAAK9D,UAAU,WACX,yBAAKA,UAAU,OACV2F,EAAY,MAEjB,yBAAK3F,UAAU,QACV2F,EAAY,MAEjB,yBAAK3F,UAAU,UACV2F,EAAY,MAEjB,yBAAK3F,UAAU,SACV2F,EAAY,MAGjB,yBAAK3F,UAAY,UACrB,2BAAOA,UAAU,SAAjB,eACQ,4BAAQA,UAAY,SAAS0D,SAAY,SAAAxD,GAAMyE,EAAW,SAAUzE,EAAE0E,cAAcd,QAAUA,MAASb,EAAI,QACtGyC,EAAWM,KAAI,SAACC,GACb,OACA,4BAAQnC,MAASmC,EAAKC,IAAOD,GACxBA,QAQjB,yBAAKjG,UAAY,QACrB,2BAAOA,UAAU,SAAjB,iBACQ,4BAAQA,UAAY,SAAS0D,SAAY,SAAAxD,GAAMyE,EAAW,OAAQzE,EAAE0E,cAAcd,QAAUA,MAASb,EAAI,MACpGyC,EAAWM,KAAI,SAACC,GACb,OACA,4BAAQnC,MAASmC,EAAKC,IAAOD,GACxBA,Y,oEChEtB,SAASE,GAAiBzB,GACCA,EAAhCpC,UADuC,IAC5B8D,EAAqB1B,EAArB0B,OAAQC,EAAa3B,EAAb2B,SAiC3B,OACE,yBAAKrG,UAAU,mBACZoG,EAAOJ,KAAI,SAACM,EAASL,GAAV,OACV,6BAhCN,SAAmBA,EAAKxD,EAAO8D,EAAU9C,GACvC,OACE,yBAAKzD,UAAU,gBAAgBC,QAAS,SAAAC,GAAMA,EAAEsE,iBAAkB6B,EAASJ,KACxEA,EAAI,EACJ,KACAxD,EACA8D,EACA,MACA9C,EACA,IAES,WAARA,GACF,yBAAKzD,UAAU,OAAOI,IAAKC,MAEjB,kBAARoD,GACF,yBAAKzD,UAAU,OAAOI,IAAKoG,OAEf,WAAR/C,GACJ,yBAAKzD,UAAU,OAAOI,IAAKqG,OAEhB,cAARhD,GACH,yBAAKzD,UAAU,OAAOI,IAAKsG,QAYxBC,CAASV,EAAIK,EAAQ7D,MAAO6D,EAAQC,SAAUD,EAAQ7C,W,MCvBlDmD,OApBf,SAA6BlC,GAAQ,IAC3BzB,EAAqByB,EAArBzB,KAAM0B,EAAeD,EAAfC,WAEd,OACE,yBAAK3E,UAAU,uBACX,yBAAKA,UAAU,SACb,2BAAOA,UAAY,QAAQ+F,QAAQ,YAAnC,wBACA,2BACEtC,KAAK,OACLD,GAAG,WACHM,MAAOb,EAAI,SACXS,SAAU,SAACxD,GACTyE,EAAW,WAAYzE,EAAE0E,cAAcd,a,MCQtC,SAAS+C,GAAmBnC,GAAQ,IAAD,EACxCpC,EAAcoC,EAAMoC,MAAMC,OAA1BzE,UADwC,EAElBgB,mBAAS,IAFS,mBAEzCpB,EAFyC,KAEhCqB,EAFgC,OAGpBD,mBAAW,CACrC,CACEG,KAAM,UACNhB,MAAO,WANqC,mBAGzC2D,EAHyC,KAGjCY,EAHiC,OAShB1D,mBAAS,GATO,mBASzC2D,EATyC,KAS/BC,EAT+B,OAWxB5D,mBAAS,GAXe,mBAWzC6D,EAXyC,KAWnCC,EAXmC,OAYd9D,oBAAS,GAZK,mBAYzC+D,EAZyC,KAY9BC,EAZ8B,KAgB1CC,EAAa,UAAGnB,EAAOa,UAAV,aAAG,EAAkBxD,KAGxC+D,qBAAU,WACRC,MACC,CAACnF,IACJ,IAAMmF,EAAW,uCAAG,4BAAArF,EAAA,sEACQS,EAAeP,GADvB,OACZQ,EADY,OAElBS,EAAWT,GACRA,EAAYsD,QACfY,EAAUlE,EAAYsD,QAJJ,2CAAH,qDAajB,SAASsB,EAASxH,GAMhBoH,GAAa,GACbJ,EAAYd,EAAOuB,QACK,YAAnBzH,EAAE2D,OAAOC,OACVkD,EAAU,GAAD,oBAAKZ,GAAL,CAAa,CACpB3C,KAAM,UACN8C,SAAU,GACV9D,MAAO,OAEW,YAAnBvC,EAAE2D,OAAOC,OACVkD,EAAU,GAAD,oBAAKZ,GAAL,CAAa,CACpB3C,KAAM,UACNhB,MAAO,OAEW,mBAAnBvC,EAAE2D,OAAOC,OACVkD,EAAU,GAAD,oBAAKZ,GAAL,CAAa,CACpB3C,KAAM,iBACN8C,SAAU,GAAIqB,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,MAAM,EAAOC,MAAM,EAAOC,MAAM,EAAOC,MAAM,MAElE,eAAnBjI,EAAE2D,OAAOC,OACXkD,EAAU,GAAD,oBACJZ,GADI,CAEP,CACE3C,KAAM,aACN8C,SAAU,OAKtB,IAAM5B,EAAa,SAACnB,EAAIM,GACtB,IAAIsE,EAAIhC,EACRgC,EAAEnB,GAAUzD,GAAMM,EAClBkD,EAAUoB,GAEVhB,EAAQlD,KAAKC,SAAWgD,GAExBG,GAAa,IAUf,OACE,yBAAKtH,UAAU,qBACb,6BAAMsC,GACN,4BAAQtC,UAAY,aAAaC,QAVrC,SAAcC,GAEZoH,GAAa,GPmCV,SAAsBhF,EAAW8D,GACtCxI,EAASmB,YAAYC,WAAW,YAAYC,IAAIqD,GAAW+F,OAAO,CAChEjC,WOpCAkC,CAAahG,EAAW8D,KAOtB,QACCiB,GAAa,mBAEd,uEAAsCnF,QAAtC,IAAsCA,OAAtC,EAAsCA,EAASO,MAA/C,YAGE,yBAAKzC,UAAU,cAGf,yBAAKA,UAAY,UACf,yBAAKA,UAAY,OAAOI,IAAOC,MAC/B,4BAAQyD,MAAM,UAAU7D,QAASyH,GAC9B,IADH,cAEc,MAId,yBAAK1H,UAAY,UACjB,yBAAKA,UAAY,OAAOI,IAAOqG,OAC/B,4BAAQ3C,MAAM,UAAU7D,QAASyH,GAC9B,IADH,cAEc,MAQd,yBAAK1H,UAAU,UAEf,yBAAKA,UAAY,OAAOI,IAAOmI,OAC/B,4BAAQzE,MAAM,iBAAiB7D,QAASyH,GACrC,IADH,aAEa,MAGb,yBAAK1H,UAAY,UAEjB,yBAAKA,UAAY,OAAOI,IAAOsG,OAC/B,4BAAQ5C,MAAM,aAAa7D,QAASyH,GACjC,IADH,iBAEiB,OAMnB,yBAAK1H,UAAU,aACM,YAAlBuH,GACC,kBAAC,GAAD,CAAkBtE,KAAMmD,EAAOa,GAAWtC,WAAYA,IAEtC,WAAjB4C,GACC,kBAAC,GAAD,CAAkBtE,KAAMmD,EAAOa,GAAWtC,WAAYA,IAEtC,kBAAjB4C,GACC,kBAAC,GAAD,CAActE,KAAMmD,EAAOa,GAAWtC,WAAYA,IAElC,cAAjB4C,GACC,kBAAC,GAAD,CAAqBtE,KAAMmD,EAAOa,GAAWtC,WAAYA,KAK7D,yBAAK3E,UAAY,YACjB,kBAAC,GAAD,CACIsC,UAAWA,EACX8D,OAAQA,EACRC,SAAUa,M,8CC/Kf,WAA2BsB,EAAWC,GAAtC,SAAArG,EAAA,sDACcxE,EAASmB,YAC3BC,WAAW,YAAYC,IAAIuJ,GAC3BH,OAAO,CACNK,SAAUD,IAJP,4C,oEAQA,WAA+BD,EAAWG,EAAQC,GAAlD,SAAAxG,EAAA,sDAGcxE,EAClBmB,YACAC,WAAW,YACXC,IAAIuJ,GACJxJ,WAAW,SAASC,IAAI0J,GACxBN,OAAO,CACNQ,UAAWD,IAEZtJ,MAAK,SAAUsD,OAGfrD,OAAM,SAAUC,GACff,QAAQe,MAAM,0BAA2BA,MAftC,4C,sBAqBA,SAAesJ,GAAtB,uC,8CAAO,WAAgCN,EAAWG,EAAQI,GAAnD,eAAA3G,EAAA,sDAGL3D,QAAQC,IAAIqK,GAETA,EAAQ,IACLC,EAAYpL,EAASmB,UAAUkK,WAAWD,UAAUD,GAGvCnL,EAClBmB,YACAC,WAAW,YACXC,IAAIuJ,GACJxJ,WAAW,SAASC,IAAI0J,GACxBN,OAAO,CACNU,MAAOC,IAER1J,MAAK,SAAUsD,OAGfrD,OAAM,SAAUC,GACff,QAAQe,MAAM,0BAA2BA,OArBtC,4C,oEA8BA,WAA6B8C,EAAWH,GAAxC,iBAAAC,EAAA,sDACL3D,QAAQC,IAAI,mCACNE,EAAW6C,IACXY,EAAaZ,IAED7D,EACfmB,YACAC,WAAW,YACXC,IAAIkD,GACJjD,IAAI,CACHsJ,UAAWrG,EACXG,UAAWA,EACX4G,SAAUtK,EACVuK,QAAS9G,EACT4E,UAAW,EACXmC,UAAU,IAEX9J,MAAK,SAAUsD,OAGfrD,OAAM,SAAUC,GACff,QAAQe,MAAM,0BAA2BA,MArBxC,4C,oEAoDA,WAA8BgJ,GAA9B,eAAApG,EAAA,sDAEH3D,QAAQC,IAAI8J,GAGNQ,EAAYpL,EAASmB,UAAUkK,WAAWD,UAAU,GAE3CpL,EAChBmB,YACAC,WAAW,YACXC,IAAIuJ,GACJH,OAAO,CACJpB,SAAU+B,EACV5J,MAAO,UAEVE,MAAK,SAAUsD,GAEdnE,QAAQC,IAAI,YAEba,OAAM,SAAUC,GACff,QAAQe,MAAM,0BAA2BA,MApBtC,4C,oEA+CA,WAA4B6J,EAAmBb,GAA/C,SAAApG,EAAA,sDAESxE,EAASmB,YAAYC,WAAW,YAAYC,IAAIuJ,GAAWxJ,WAAW,SAASsK,YAAW,SAASrK,GAC3GoK,EAAmBpK,MAHpB,4C,sBAQA,SAAesK,GAAtB,qC,8CAAO,WAA8BC,EAAsBhB,GAApD,SAAApG,EAAA,sDACaxE,EAASmB,YAAYC,WAAW,YAAYC,IAAIuJ,GAAWc,YAAW,SAASrK,GAC3FuK,EAAqBvK,EAAIgE,WAF1B,4C,oEAYA,WAAgCuF,EAAWiB,EAAW9K,GAAtD,SAAAyD,EAAA,sDACH3D,QAAQC,IAAI8J,GACZ/J,QAAQC,IAAIC,GAECf,EACdmB,YACAC,WAAW,YACXC,IAAIuJ,GACJxJ,WAAW,SAASC,IAAIwK,GACxBvK,IAAI,CACDsE,GAAIiG,EACJtK,KAAMR,EAAKQ,OAGdG,MAAK,SAAUsD,OAGfrD,OAAM,SAAUC,GACff,QAAQe,MAAM,0BAA2BA,MAlBtC,4C,sBClLQ,SAASkK,GAAahF,GAAQ,IACnCxC,EAAYwC,EAAZxC,QACFpC,EAAUC,cAF0B,EAIZuD,oBAAS,GAJG,mBAInCqG,EAJmC,KAI1BC,EAJ0B,OAKnBtG,qBALmB,mBAKnCuG,EALmC,KAK9BC,EAL8B,KAoE1C,OAPA,OAAG5H,QAAH,IAAGA,OAAH,EAAGA,EAASkE,cACa2D,IAAf,OAAP7H,QAAO,IAAPA,OAAA,EAAAA,EAASkE,OAAO,KArDnB,WAEe,OAAGlE,QAAH,IAAGA,KAASkE,OAAzB,IAGIrB,EAAanH,EAASoH,UAAUC,MACpC,UAAG/C,QAAH,IAAGA,OAAH,EAAGA,EAASkE,OAAO,GACnB,IAAI4D,EAAWjF,EAAWI,MAAM,kBAAYjD,QAAZ,IAAYA,OAAZ,EAAYA,EAASkE,OAAO,GAAGb,UAAW,QAK3DyE,EACZC,iBACA3K,MAAK,SAAU4K,GAEdJ,EAAOI,GACPN,GAAW,MAGZrK,OAAM,SAAUC,OAkCtB2K,GAMG,yBAAKnK,UAAU,yBACb,6BAAY,OAAPkC,QAAO,IAAPA,OAAA,EAAAA,EAASO,QAAS,OAEtBkH,GACD,yBAAKS,MAAM,MAAMC,OAAO,MAAMjK,IAAKyJ,IAGnC,4BAAW,OAAP3H,QAAO,IAAPA,OAAA,EAAAA,EAASS,cAAe,MAA5B,KAEF,4BAAQ1C,QAzCV,SAA8B0D,GAU5B,IAAIxB,EAAS+B,KAAKI,MAAM,IAAuB,IAAhBJ,KAAKC,UAAkBC,YDYnD,SAAP,8BCPIkG,CAAcpI,EAAQI,UAAWH,GAIjCrC,EAAQK,KAAK,cAAgBgC,GAC7BwB,EAAMa,mBAqBN,iB,MC9EW,SAAS+F,KAAa,IAAD,EAEJjH,mBAAS,IAFL,mBAE7BF,EAF6B,KAEnBoH,EAFmB,KAclC,OAVAhD,qBAAU,WAAM,4CACd,4BAAApF,EAAA,sEACqBe,IADrB,OACQsH,EADR,OAEED,EAAYC,EAAKC,KAAK1E,KAAI,SAAA/G,GAAG,sBAAUA,EAAIgE,OAAd,CAAsBO,GAAIvE,EAAIuE,SAF7D,4CADc,uBAAC,WAAD,wBAKdmH,KACC,IACHlM,QAAQC,IAAI0E,GAIV,yBAAKpD,UAAY,YACf,oCACA,qDACA,yBAAKA,UAAU,UAAf,SAEM,2BAAOwD,GAAK,SAASC,KAAK,UAGhC,yBAAKzD,UAAU,eACb,yBAAKA,UAAU,YACZoD,EAAS4C,KAAI,SAAA9D,GAAO,OACnB,yBAAKgE,IAAOhE,EAAQsB,IAClB,kBAACkG,GAAD,CAAaxH,QAASA,W,YC3BrB,SAAS0I,KAAa,IAAD,EACAtH,mBAAS,IADT,mBAC3BkF,EAD2B,KAChBqC,EADgB,OAEVvH,mBAAS,IAFC,mBAE3B3E,EAF2B,KAErBmM,EAFqB,KAK5BhL,EAAUC,cAgDhB,OACE,yBAAKC,UAAU,YACb,qCACA,0DACA,0BAAMA,UAAY,eAAe+K,SA9BrC,SAAkBpH,GAGhB,IAMQ8F,EALN,OACAvF,KAAKC,SACFC,SAAS,IACTC,UAAU,GACCH,KAAKI,MAAM,IAAuB,IAAhBJ,KAAKC,WH+IpC,SAAP,gCG3IM6G,CAAiBxC,EAAWiB,EAAW9K,GAEvCmB,EAAQK,KAAK,cAAgBqI,EAAY,IAAMiB,GAE/CqB,GAAQ,SAAAG,GACN,OAAO,eACJA,EADH,CAEAzH,GAAIiG,OAGN9F,EAAMa,mBASN,6CAEI,2BACEf,KAAK,OACLtE,KAAK,KACLuE,SAxDV,SAAuBxD,GACrB2K,EAAa3K,EAAE2D,OAAOC,WA0DlB,iDAEE,2BACEL,KAAK,OACLtE,KAAK,WACLuE,SA1DV,SAAmBxD,GACjB,IAAIgL,EAAYhL,EAAE2D,OAAOC,MACzBgH,GAAQ,SAAAG,GACN,OAAO,eACFA,EADL,CAEE9L,KAAM+L,WAwDN,4BAAQlL,UAAY,cAApB,UC7EO,SAASmL,KACtB,OACE,6BACE,2CACA,gF,YCJS,SAASC,GAAK1G,GAAQ,IAC5B/F,EAAS+F,EAAT/F,KAGR,OACC,yBAAKqB,UAAY,QAChB,wBAAIA,UAAY,aAAgB,OAAJrB,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,OAAQ,U,wBCJ9B,SAASkM,GAAM3G,GAAQ,IAC7B4G,EAAU5G,EAAV4G,MAKR,OACC,yBAAKtL,UAAY,SACfsL,EAAMtF,KAAI,SAAArH,GACV,OAAO,kBAAC,GAAD,CAAMuH,IAAOvH,EAAK6E,GAAI7E,KAAMA,OAEpC,yBAAKqB,UAAU,SAASI,IAAKK,QCZjB,SAAS8K,GAAM7G,GAAQ,IAC5B8G,EAAc9G,EAAd8G,UAD2B,EAEZlI,qBAFY,mBAE5BuG,EAF4B,KAEvBC,EAFuB,OAGbxG,qBAHa,mBAG5BmI,EAH4B,KAGvBC,EAHuB,OAIJpI,oBAAS,GAJL,mBAI3BqI,EAJ2B,KAIlBC,EAJkB,OAKLtI,oBAAS,GALJ,mBAK5BqG,EAL4B,KAKnBC,EALmB,KA2DnC,MAR2B,QAAjB,OAAT4B,QAAS,IAATA,OAAA,EAAAA,EAAWK,OAAO,EAAE,IA1CAjO,EAASoH,UAAUC,MAEVE,MAAM,UAAYqG,EAAY,QAKrDvB,iBACA3K,MAAK,SAAU4K,GAEdJ,EAAOI,GACPN,GAAW,GACXnL,QAAQC,IAAI,SAEba,OAAM,SAAUC,OA8BU,QAAjB,OAATgM,QAAS,IAATA,OAAA,EAAAA,EAAWK,OAAO,EAAE,KArBNjO,EAASoH,UAAUC,MACVE,MAAM,UAAYqG,EAAY,QAIrDvB,iBACA3K,MAAK,SAAU4K,GAEdwB,EAAOxB,GACP0B,GAAW,MAEZrM,OAAM,SAAUC,OAiBrB,yBAAKQ,UAAU,eAEZ,uCAEE2J,GACH,yBAAKS,MAAM,MAAMC,OAAO,MAAMjK,IAAKyJ,IAEhC8B,GACD,2BAAOvB,MAAM,MAAMC,OAAO,MAAMyB,UAAQ,GACpC,4BAAQ1L,IAAKqL,EAAKhI,KAAK,gBCnEpB,SAAS8H,GAAM7G,GAS1B,IATkC,IAC7BqH,EAA4ErH,EAA5EqH,UAAWC,EAAiEtH,EAAjEsH,WAAYC,EAAqDvH,EAArDuH,SAAUC,EAA2CxH,EAA3CwH,YAAaC,EAA8BzH,EAA9ByH,SAASC,EAAqB1H,EAArB0H,SAAUC,EAAW3H,EAAX2H,QAIlEC,EAAgB,EAChBC,EAAY,EACZC,EAAQ,GAEHC,EAAI,EAAGA,GAAC,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAUzE,QAAQ8E,IACpCD,EAAMC,GAAK,EAGb,IAAK,IAAIA,EAAI,EAAGA,EAAIR,EAAStE,OAAQ8E,IAAK,CACtC,IAEsB,IAI8C,EAN9DnG,EAAU2F,EAASQ,GAEzB,GADAhO,QAAQC,IAAI4H,GACZ,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAASuC,UAIR,IAHA,OAAGvC,QAAH,IAAGA,GAAH,UAAGA,EAASuC,UAAUqD,UAAtB,aAAG,EAAiCQ,SAChCJ,IAEgD,qBAAjD,OAAOhG,QAAP,IAAOA,GAAP,UAAOA,EAASuC,UAAUqD,UAA1B,aAAO,EAAiCS,MACvCJ,IACAC,EAAK,OAAClG,QAAD,IAACA,GAAD,UAACA,EAASuC,UAAUqD,UAApB,aAAC,EAAiCS,QA2DrD,MAtDmB,SAAdX,GACCG,EAAS,YAsDb,yBAAKnM,UAAU,qBAGK,YAAdgM,GACF,6BACE,4BAAKD,EAAUxF,UACf,2CAAiB+F,GACjB,4BAAQtM,UAAU,MAAMC,QAjChC,SAAqBC,GAGnB,IADA,IAAI+C,EAAO,GACFwJ,EAAI,EAAGA,EAAIR,EAAStE,OAAQ8E,IAAK,CACtC,IACsB,EADhBnG,EAAU2F,EAASQ,GACzB,UAAGnG,QAAH,IAAGA,OAAH,EAAGA,EAASuC,WACR,OAAGvC,QAAH,IAAGA,GAAH,UAAGA,EAASuC,UAAUqD,UAAtB,aAAG,EAAiCQ,QAClCzJ,EAAKwJ,GAAKnG,EAAQuC,UAAUqD,GAAaQ,OAEzCzJ,EAAKwJ,GAAK,GAIpBxJ,EAAKgJ,EAAStE,QAAUoE,EAAUW,OAClCL,EAAQpJ,GACRkJ,EAAS,eAkBH,UAKc,aAAdH,GACA,6BACE,uCAAaO,GACf,4BAAQvM,UAAU,MAAMC,QAvBhC,WACEkM,EAAS,eAsBH,SAEM,yBAAKnM,UAAW,OACnBiM,EAASjG,KAAI,SAACM,EAASL,GAAV,OACZ,6BACI,yBAAKjG,UAAU,WACb,yBAAKA,UAAU,cACZsG,EAAQuC,UAAUqD,GAAaQ,aAMpC,yBAAK1M,UAAU,WACb,yBAAKA,UAAU,cACZ+L,EAAUW,WAOT,aAAdV,GACA,6BACE,uCAAaO,GACT,yBAAKvM,UAAW,OACnBoM,EAASpG,KAAI,SAACM,EAASL,GAAV,OACR,yBAAKjG,UAAU,WACb,yBAAKA,UAAU,cACZsG,EAAU,MAAQkG,EAAMvG,GAAO,Y,MChIvC,SAAS2G,GAAoBlI,GAAQ,IACzC8D,EAAsE9D,EAAtE8D,UAAWuD,EAA2DrH,EAA3DqH,UAAWC,EAAgDtH,EAAhDsH,WAAYC,EAAoCvH,EAApCuH,SAAWC,EAAyBxH,EAAzBwH,YAAaC,EAAYzH,EAAZyH,SAE7D5F,EAAWwF,EAAUxF,SACrBnE,EAAI2J,EAAUnE,EACdiF,EAAId,EAAUlE,EACdiF,EAAIf,EAAUjE,EACdiF,EAAIhB,EAAUhE,EAGdiF,EAAOjB,EAAU/D,KACjBiF,EAAOlB,EAAU9D,KACjBiF,EAAOnB,EAAU7D,KACjBiF,EAAOpB,EAAU5D,KAIjBmE,EAAgB,EAGpB7N,QAAQC,IAAI,oBAAqBuN,GACjCxN,QAAQC,IAAI,qBAAsBqN,GAuBlC,IAAK,IAAIU,EAAI,EAAGA,EAAIR,EAAStE,OAAQ8E,IAAK,CACtC,IAEsB,EAFhBnG,EAAU2F,EAASQ,GAEzB,UAAGnG,QAAH,IAAGA,OAAH,EAAGA,EAASuC,WACR,OAAGvC,QAAH,IAAGA,GAAH,UAAGA,EAASuC,UAAUqD,UAAtB,aAAG,EAAiCQ,SAChCJ,IAMK,SAAdN,GACCG,EAAS,YAGb,IAAMiB,EAAQ,SAAClN,GACXA,EAAEsE,iBACF2H,EAAS,UArCjB,WAEI,IAAK,IAAIM,EAAI,EAAGA,EAAIR,EAAStE,OAAQ8E,IAAK,CACtC,IAEmB,EAFb9N,EAAOsN,EAASQ,GAEtB,UAAG9N,QAAH,IAAGA,OAAH,EAAGA,EAAMkK,UAEsC,MAApC,OAAJlK,QAAI,IAAJA,GAAA,UAAAA,EAAMkK,UAAUqD,UAAhB,eAA8BQ,SAA0B,GAARM,IAC/CvO,QAAQC,IAAI,gBAAkBC,EAAKQ,KAAQ,cAAgBR,EAAKoK,OAChED,GAAiBN,EAAW7J,EAAK6E,GAAI6J,OAAOtB,EAAUuB,WA6B9DC,IAKEC,EAAS,SAACC,EAAMC,GAClB,OACI,yBAAK1N,UAAW,SAAW0N,GACnB,wBAAI1N,UAAY,QAAhB,IAAyByN,EAAzB,OAKVE,EAAW,SAACF,EAAMG,GAEpB,IAAIF,EAAO,MAOX,OANGE,IACCF,EAAQ,SAMR,yBAAK1N,UAAW,SAAW0N,GACnB,wBAAI1N,UAAY,QAAhB,IAAyByN,EAAzB,KACZ,2BAAKnB,GAAiB,SAM1B,OACJ,yBAAKtM,UAAY,sBAEE,UAAdgM,GACG,yBAAKhM,UAAU,MACP,wBAAIA,UAAY,YAAYuG,GACxB,yBAAKvG,UAAU,WACVwN,EAAOpL,EAAG,OACVoL,EAAOX,EAAG,SACVW,EAAOV,EAAG,QACVU,EAAOT,EAAG,WAEnB,4BAAQ/M,UAAU,MAAMC,QAAS,SAACC,GAAD,OAAKkN,EAAOlN,KAA7C,SACA,yBAAKF,UAAW,aAAhB,cAAwCsM,IAIpC,UAAdN,GACE,yBAAKhM,UAAU,iBACX,wBAAIA,UAAY,YAAYuG,GAC5B,yBAAKvG,UAAU,WACV2N,EAASvL,EAAI4K,GACbW,EAASd,EAAII,GACbU,EAASb,EAAII,GACbS,EAASZ,EAAII,MCvHf,SAAS5B,GAAM7G,GAAQ,IAC7B4G,EAAS5G,EAAT4G,MAD4B,EAEDhI,mBAAS,GAFR,mBAE5BuK,EAF4B,KAEjBC,EAFiB,OAGPxK,mBAAS,IAHF,mBAG5ByK,EAH4B,KAGpBC,EAHoB,KA4BnC,OAtBAvP,QAAQC,IAAI4M,GAGZ,WAEI,IAAK,IAAImB,EAAI,EAAGA,EAAInB,EAAM3D,OAAQ8E,IAAK,CACrC,IAAM9N,EAAO2M,EAAMmB,IAEnB,OAAG9N,QAAH,IAAGA,OAAH,EAAGA,EAAMkK,aACE,OAAJlK,QAAI,IAAJA,OAAA,EAAAA,EAAMoK,OAAQ8E,IACbpP,QAAQC,IAAI,SAAWC,EAAKQ,KAAQ,8BAAgCR,EAAKoK,OAC3E+E,EAAanP,EAAKoK,OAClBiF,EAAUrP,EAAKQ,QAQ3B8O,GAGE,yBAAKjO,UAAU,WAEb,6CACA,2CAAiB+N,EAAjB,aAAmCF,EAAnC,cCdStC,OAlBf,SAAc7G,GAAQ,IACZqH,EAA2DrH,EAA3DqH,UAAWC,EAAgDtH,EAAhDsH,WAUnB,OAVmEtH,EAApCuH,SAAoCvH,EAA1BuC,SAA0BvC,EAAhBwJ,YACnDzP,QAAQC,IAAI,aASO,iBAAfsN,EACK,mBATT,WACE,OACE,6BACE,4BAAKD,EAAUxF,aAMZ,MAGF,wE,MCLM,SAAS4H,GAAczJ,GAAQ,IACnC8D,EAAa9D,EAAMoC,MAAMC,OAAzByB,UADkC,EAGdlF,mBAAS,IAHK,mBAGrC8K,EAHqC,KAG5BC,EAH4B,OAIX/K,mBAAS,IAJE,mBAInCpB,EAJmC,KAI1BqB,EAJ0B,OAKjBD,mBAAS,IALQ,mBAKpCgI,EALoC,KAK7BgD,EAL6B,KAW3C,SAASC,EAAoBC,GAC3BH,EAAWG,GAMb,SAASnF,EAAmB4C,GAC1BqC,EAASrC,EAASvB,KAAK1E,KAAI,SAAA/G,GAAG,sBAAUA,EAAIgE,OAAd,CAAsBO,GAAIvE,EAAIuE,SAsB9D,SAAS2I,EAAS/M,IZwFZ,SAAuBoJ,EAAWpJ,GACxCxB,EAASmB,YACRC,WAAW,YAAYC,IAAIuJ,GAC3BH,OAAO,CACJjJ,MAAOA,IY1FTqP,CAAcjG,EAAWpJ,GA6B3B,OAhEAoI,qBAAU,WACR+B,GAAegF,EAAqB/F,KACnC,CAACA,IAKJhB,qBAAU,YZyIL,SAAP,8BYxIIkH,CAAarF,EAAoBb,KAChC,CAACA,EAAW4F,IAMf5G,qBAAU,WAAM,4CACd,WAA2BlF,GAA3B,eAAAF,EAAA,8DACoB2H,GAAbzH,EADP,gCAEkCO,EAAeP,GAFjD,OAEcQ,EAFd,OAGQS,EAAWT,GAHnB,4CADc,uBAAC,SAAD,2BAOd6L,CAAU,OAACP,QAAD,IAACA,OAAD,EAACA,EAAS9L,aACnB,CAACkG,EAAW4F,IA0Cb,yBAAKpO,UAAU,iBAGU,IAAf,OAAPoO,QAAO,IAAPA,OAAA,EAAAA,EAASnH,YAAuB,OAALqE,QAAK,IAALA,OAAA,EAAAA,EAAO3D,SAAU,GAC3C,6BACE,0CACA,4BAAKa,GACL,+DAImB,IAAf,OAAP4F,QAAO,IAAPA,OAAA,EAAAA,EAASnH,YAAuB,OAALqE,QAAK,IAALA,OAAA,EAAAA,EAAO3D,SAAU,GAC3C,kBAAC0D,GAAD,CAAW7C,UAAWA,EAAW8C,MAAOA,KAOlC,OAAPpJ,QAAO,IAAPA,OAAA,EAAAA,EAASkE,UACD,OAAPgI,QAAO,IAAPA,OAAA,EAAAA,EAASnH,WAAY,GACqB,YAAnC,OAAP/E,QAAO,IAAPA,OAAA,EAAAA,EAASkE,OAAOgI,EAAQnH,UAAUxD,OACZ,IAAd,OAAP2K,QAAO,IAAPA,OAAA,EAAAA,EAAShF,WACR,4BAAK,YAAcgF,EAAQnH,SAAW,oBAAtC,MAEA,kBAAC,GAAD,CAAauE,UAAWtJ,EAAQkE,OAAOgI,EAAQnH,UAAU1B,YAIrD,OAAPrD,QAAO,IAAPA,OAAA,EAAAA,EAASkE,UACD,OAAPgI,QAAO,IAAPA,OAAA,EAAAA,EAASnH,WAAY,GACqB,YAAnC,OAAP/E,QAAO,IAAPA,OAAA,EAAAA,EAASkE,OAAOgI,EAAQnH,UAAUxD,OACZ,IAAd,OAAP2K,QAAO,IAAPA,OAAA,EAAAA,EAAShF,WACR,4BAAK,YAAcgF,EAAQnH,SAAW,iBAAtC,MAEA,kBAAC,GAAD,CACE8E,UAAW7J,EAAQkE,OAAOgI,EAAQnH,UAAW+E,WAAaoC,EAAQhP,MAAO6M,SAAYX,EAAOc,SAAUgC,EAAQ1F,SAAUwD,YAAakC,EAAQnH,SAAUkF,SAAUA,EAAUE,QA/DnL,SAAiBpJ,IZpDd,SAAP,8BYqDM2L,CAAYpG,EAAWvF,OAiEf,OAAPf,QAAO,IAAPA,OAAA,EAAAA,EAASkE,UAAiB,OAAPgI,QAAO,IAAPA,OAAA,EAAAA,EAASnH,WAAY,GAAgD,mBAAnC,OAAP/E,QAAO,IAAPA,OAAA,EAAAA,EAASkE,OAAOgI,EAAQnH,UAAUxD,OAC/E,4BAAK,YAAc2K,EAAQnH,SAAW,YAAtC,MACA,kBAAC,GAAD,CAAoBuB,UAAaA,EAAWuD,UAAW7J,EAAQkE,OAAOgI,EAAQnH,UAAW+E,WAAYoC,EAAQhP,MAAO6M,SAAUX,EAAOY,YAAakC,EAAQnH,SAAUkF,SAAUA,KAGxK,OAAPjK,QAAO,IAAPA,OAAA,EAAAA,EAASkE,UACD,OAAPgI,QAAO,IAAPA,OAAA,EAAAA,EAASnH,WAAY,GACqB,eAAnC,OAAP/E,QAAO,IAAPA,OAAA,EAAAA,EAASkE,OAAOgI,EAAQnH,UAAUxD,OACZ,IAAd,OAAP2K,QAAO,IAAPA,OAAA,EAAAA,EAAShF,WACR,4BAAK,YAAcgF,EAAQnH,SAAW,oBAAtC,MAEA,kBAAC,GAAD,CACE8E,UAAW7J,EAAQkE,OAAOgI,EAAQnH,UAClC+E,WAAW,eACXC,SAAUX,IAKO,IAAd,OAAP8C,QAAO,IAAPA,OAAA,EAAAA,EAAShF,WAAsB,4BAAQnJ,QAhF7C,WAEKiC,EAAQkE,OAAOuB,OAAQ,EAAIyG,EAAQnH,WZoDnC,SAAP,4BYnDQ4H,CAAerG,GACf2D,EAAS,UZqLT,SAAuB3D,GAC7B5K,EAASmB,YACRC,WAAW,YAAYC,IAAIuJ,GAC3BH,OAAO,CACJe,UAAU,IYtLV0F,CAActG,KAyEmB,gBAMV,IAAd,OAAP4F,QAAO,IAAPA,OAAA,EAAAA,EAAShF,WAAqB,kBAAC,GAAD,CAAakC,MAAOA,KCjJ3C,SAASF,GAAM1G,GAAQ,IAC5B8G,EAAc9G,EAAd8G,UAD2B,EAEZlI,qBAFY,mBAE5BuG,EAF4B,KAEvBC,EAFuB,KA6BnC,OAvBqBlM,EAASoH,UAAUC,MAEVE,MAAM,UAAYqG,EAAY,QAKrDvB,iBACA3K,MAAK,SAAU4K,GAEdJ,EAAOI,MAGR3K,OAAM,SAAUC,OAWrB,yBAAKQ,UAAU,eAEb,yBAAKoK,MAAM,MAAMC,OAAO,MAAMjK,IAAKyJ,KC9B1B,SAASuB,GAAM1G,GAAQ,IAC7BqH,EAAmDrH,EAAnDqH,UAAWC,EAAwCtH,EAAxCsH,WAAY+C,EAA4BrK,EAA5BqK,eAAgB3C,EAAY1H,EAAZ0H,SADX,EAGC9I,mBAAS,YAHV,mBAG5B0L,EAH4B,KAGhBC,EAHgB,OAIH3L,mBAAS,IAJN,mBAI5B4L,EAJ4B,KAIlBC,EAJkB,KAuBnC,OAJA3H,qBAAU,WACJyH,EAAc,cACjB,CAACjD,IAGF,yBAAKhM,UAAU,WAEK,YAAdgM,GAA0C,YAAbgD,GAC/B,6BACI,4BAAKjD,EAAUxF,UAEf,yBAAK6I,MAAM,eACT,iDACA,2BAAO3L,KAAK,OAAOK,MAAOoL,EAAUxL,SAAU,SAAAxD,GAAMiP,EAAajP,EAAE0E,cAAcd,WAInF,4BAAQ7D,QA9BlB,SAAsBC,GAChB6O,EAAe,CAACrC,OAAQwC,IACxBD,EAAc,WACdxQ,QAAQC,IAAI,aA2BR,iBAIY,YAAdsN,GAA0C,YAAbgD,GAC3B,yBAAKhP,UAAU,cACP,oDAMK,aAAdgM,GAA2C,YAAbgD,GAC/B,yCAEE,6BACC5C,EAASpG,KAAI,SAACM,EAASL,GAAV,OACZ,yBAAKjG,UAAU,MAAMC,QAAS,SAAAC,GAvCpC6O,EAAe,CAACrC,OAAQwC,EACRvC,KAsC4B1G,KAAMC,IAAKD,GAC9CK,QAQO,aAAd0F,GAA2C,YAAbgD,GAC5B,yBAAKhP,UAAU,cACP,kDAOI,aAAdgM,GACF,6BACI,yBAAKhM,UAAU,cACP,qDC3EL,SAASqP,GAAoB3K,GAC8BA,EAA/D8D,UAA+D9D,EAApDuC,SAD8B,IACpB8E,EAA0CrH,EAA1CqH,UAAWuD,EAA+B5K,EAA/B4K,MAAOP,EAAwBrK,EAAxBqK,eADC,GACuBrK,EAAR/F,KAE1B2E,mBAAS,aAHE,mBAGxC0L,EAHwC,KAG5BC,EAH4B,KAM3C1I,EAAWwF,EAAUxF,SACrBnE,EAAI2J,EAAUnE,EACdiF,EAAId,EAAUlE,EACdiF,EAAIf,EAAUjE,EACdiF,EAAIhB,EAAUhE,EAEdiF,EAAOjB,EAAU/D,KACjBiF,EAAOlB,EAAU9D,KACjBiF,EAAOnB,EAAU7D,KACjBiF,EAAOpB,EAAU5D,KAf0B,EAkBjB7E,oBAAS,GAlBQ,mBAkBxCsK,EAlBwC,KAkB/B2B,EAlB+B,KAwBlD/H,qBAAU,WACK,SAAT8H,GAECL,EAAc,cAEjB,CAACK,IAEF,IA6BM9B,EAAS,SAAChK,EAAIiK,EAAMC,GACtB,OACI,yBAAK1N,UAAW,SAAW0N,EAAOzN,QAAS,SAACC,GAAD,OA/BrC,SAACA,EAAGsD,GACdtD,EAAEsE,iBAKF/F,QAAQC,IAAI,eAAiB8E,GAC7ByL,EAAc,WACdF,EAAe,CAACrC,OAAQlJ,IAExB/E,QAAQC,IAAI,OAASsO,EAAOxJ,GAExB+L,KADDvC,GAAQ,KAAMxJ,QAGTyJ,GAAQ,KAAMzJ,QAGd0J,GAAQ,KAAM1J,OAGd2J,GAAQ,KAAM3J,MAW8BgM,CAAOtP,EAAGsD,KAClD,wBAAIxD,UAAW,QAAf,IAAyByN,EAAzB,OAQVE,EAAW,SAACnK,EAAIiK,EAAMG,GACxBnP,QAAQC,IAAIkP,GAEZ,IAAIF,EAAO,MAQX,OAPGE,IACCF,EAAQ,QACRjP,QAAQC,IAAI,MAAQ+O,IAMpB,yBAAKzN,UAAW,SAAW0N,GACnB,wBAAI1N,UAAW,QAAf,IAAyByN,EAAzB,OAQhB,OACI,yBAAKzN,UAAY,QACG,YAAdgP,GAAsC,YAATM,GAE3B,yBAAKtP,UAAU,YACX,4BAAKuG,GACL,yBAAKvG,UAAU,WACVwN,EAAO,IAAKpL,EAAG,OACfoL,EAAO,IAAKX,EAAG,SACfW,EAAO,IAAKV,EAAG,QACfU,EAAO,IAAKT,EAAG,YAKZ,WAAdiC,GAAoC,YAATM,GAEzB,yBAAKtP,UAAU,QACX,oDAIG,UAATsP,GAEE,yBAAKtP,UAAU,UACX,4BAAKuG,GACL,yBAAKvG,UAAU,WACV2N,EAAS,EAAKvL,EAAI4K,GAClBW,EAAS,EAAKd,EAAII,GAClBU,EAAS,EAAKb,EAAII,GAClBS,EAAS,EAAKZ,EAAII,IAGvB,6BACCS,GAAW,wCACVA,GAAW,4CClIlB,SAASxC,GAAM1G,GAAQ,IAC7B/F,EAAQ+F,EAAR/F,KAIP,OACE,yBAAKqB,UAAU,WAEb,6CACA,iDAAuBrB,EAAKoK,MAA5B,gBCeSqC,OAxBf,SAAc1G,GACwBA,EAA7BqH,UADa,IACFgD,EAAkBrK,EAAlBqK,eADC,EAEazL,mBAAS,IAFtB,mBAEZ4L,EAFY,KAEFC,EAFE,KAcnB,OACE,yBAAKnP,UAAU,QACb,4BAAK0E,EAAMqH,UAAUxF,UACrB,8BAAU/C,GAAG,WAAWM,MAAOoL,EAAUxL,SAAU,SAAAxD,GAAC,OAAIiP,EAAYjP,EAAE0E,cAAcd,UACpF,4BAAQ7D,QAAS,SAAAC,GAAC,OAdtB,SAAwBA,GACtBA,EAAEsE,iBAIFuK,EAHqB,CACnBG,SAAUA,IAGZC,EAAY,IACZ1Q,QAAQC,IAAI,0BAOY+Q,CAAevP,KAArC,UACCgP,I,4BCZQ,SAASQ,GAAchL,GAAQ,IACvC/F,EAAQ+F,EAAR/F,KAiBL,OACE,yBAAKqB,UAAU,gBACX,iCAAU,OAAJrB,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,OAAQ,QAEpB,yBAAKa,UAAU,SAASI,IAAKuP,OAC7B,iCAAU,OAAJhR,QAAI,IAAJA,OAAA,EAAAA,EAAMoK,QAAU,IAAtB,QCtBO,SAAS6G,GAAclL,GAAQ,IAAD,EAE5CA,EAAMoC,MAAMC,OADFyB,EADkC,EAClCA,UAAWG,EADuB,EACvBA,OADuB,EAGdrF,mBAAS,IAHK,mBAGrC8K,EAHqC,KAG5BC,EAH4B,OAId/K,mBAAS,IAJK,mBAIrCpB,EAJqC,KAI5BqB,EAJ4B,OAKpBD,mBAAS,IALW,mBAKrC3E,EALqC,KAK/BmM,EAL+B,KAO3C,SAASyD,EAAoBC,GAC3BH,EAAWG,GAOb,SAASqB,EAAa5D,GAGlBnB,EAAQmB,GAsBV,SAAS8C,EAAenG,GAEtB,IAAIkH,EAAenR,EAAKkK,UAEpBiH,IAEFA,EAAe,IAGjB,IAAK,IAAIrD,EAAG,EAAGA,EAAI2B,EAAQnH,SAAUwF,IAAK,CACxBqD,EAAarD,KAE3BqD,EAAarD,GAAK,IAOtBqD,EAAa1B,EAAQnH,UAAY2B,EnBvDhC,SAAP,gCmByDMmH,CAAgBvH,EAAWG,EAAQmH,GAKvC,OAvDAtI,qBAAU,WACR+B,GAAegF,EAAqB/F,KACnC,CAACA,IAOJhB,qBAAU,YnBgLL,SAAwBgB,EAAWG,EAAQqH,GAEnCpS,EAASmB,YACnBC,WAAW,YAAYC,IAAIuJ,GAC3BxJ,WAAW,SAASC,IAAI0J,GAAQW,YAC/B,SAAA2G,GAAI,OAAID,EAASC,EAAKhN,WmBpLxBiN,CAAe1H,EAAWG,EAAQkH,KACjC,CAAClH,IAGJnB,qBAAU,WAAM,4CACd,WAA2BlF,GAA3B,eAAAF,EAAA,8DACoB2H,GAAbzH,EADP,gCAEkCO,EAAeP,GAFjD,OAEcQ,EAFd,OAGQS,EAAWT,GAHnB,4CADc,uBAAC,SAAD,2BAOd6L,CAAU,OAACP,QAAD,IAACA,OAAD,EAACA,EAAS9L,aACnB,CAAC8L,IAkCF,yBAAKpO,UAAU,iBACU,IAAf,OAAPoO,QAAO,IAAPA,OAAA,EAAAA,EAASnH,WACR,6BACE,4BAAK,mBAAatI,QAAb,IAAaA,OAAb,EAAaA,EAAMQ,OACxB,oDACA,kDAAiB+C,QAAjB,IAAiBA,OAAjB,EAAiBA,EAASO,MAA1B,cAKI,OAAP2L,QAAO,IAAPA,OAAA,EAAAA,EAASnH,YAAa,GACrB,6BACE,kBAAC,GAAD,CAAetI,KAAQA,MAIlB,OAAPuD,QAAO,IAAPA,OAAA,EAAAA,EAASkE,UACF,OAAPgI,QAAO,IAAPA,OAAA,EAAAA,EAASnH,WAAY,GACqB,YAAnC,OAAP/E,QAAO,IAAPA,OAAA,EAAAA,EAASkE,OAAOgI,EAAQnH,UAAUxD,OAA0C,IAAd,OAAP2K,QAAO,IAAPA,OAAA,EAAAA,EAAShF,WAC9D,6BACE,kBAAC,GAAD,CAAaoC,UAAWtJ,EAAQkE,OAAOgI,EAAQnH,UAAU1B,aAIvD,OAAPrD,QAAO,IAAPA,OAAA,EAAAA,EAASkE,UACD,OAAPgI,QAAO,IAAPA,OAAA,EAAAA,EAASnH,WAAY,GACqB,YAAnC,OAAP/E,QAAO,IAAPA,OAAA,EAAAA,EAASkE,OAAOgI,EAAQnH,UAAUxD,OAChC,yBAAKzD,UAAU,WACb,kBAAC,GAAD,CAAa+L,UAAW7J,EAAQkE,OAAOgI,EAAQnH,UAAW+E,WAAYoC,EAAQhP,MAAO2P,eAAgBA,EAAgB3C,SAAUgC,EAAQ1F,aAIhI,OAAPxG,QAAO,IAAPA,OAAA,EAAAA,EAASkE,UAAkB,OAAPgI,QAAO,IAAPA,OAAA,EAAAA,EAASnH,WAAY,GAAgD,mBAAnC,OAAP/E,QAAO,IAAPA,OAAA,EAAAA,EAASkE,OAAOgI,EAAQnH,UAAUxD,OACnF,6BACE,kBAAC4L,GAAD,CAAoB7G,UAAaA,EAAWvB,SAAYmH,EAAQnH,SAAU8E,UAAW7J,EAAQkE,OAAOgI,EAAQnH,UAAWqI,MAAOlB,EAAQhP,MAAO2P,eAAgBA,EAAgBpQ,KAAQA,MAInL,OAAPuD,QAAO,IAAPA,OAAA,EAAAA,EAASkE,UACD,OAAPgI,QAAO,IAAPA,OAAA,EAAAA,EAASnH,WAAY,GACqB,eAAnC,OAAP/E,QAAO,IAAPA,OAAA,EAAAA,EAASkE,OAAOgI,EAAQnH,UAAUxD,OAChC,yBAAKzD,UAAU,cACb,kBAAC,GAAD,CAAgB+L,UAAW7J,EAAQkE,OAAOgI,EAAQnH,UAAW8H,eAAgBA,MAKtE,OAAPX,QAAO,IAAPA,OAAA,EAAAA,EAAShF,WAAgC,GAApBgF,EAAQhF,UAC7B,kBAAC,GAAD,CAAazK,KAAQA,KChHlB,SAASwR,KACtB,OACE,yBAAKnQ,UAAU,UACb,kBAAC,IAAD,CAAOoQ,OAAK,EAACC,KAAK,IAAIC,UAAWvP,IACjC,kBAAC,IAAD,CAAOqP,OAAK,EAACC,KAAK,WAAWC,UAAWC,IACxC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAWjN,IACvC,kBAAC,IAAD,CAAO+M,OAAK,EAACC,KAAK,qBAAqBC,UAAWzJ,KAClD,kBAAC,IAAD,CAAOuJ,OAAK,EAACC,KAAK,QAAQC,UAAW/F,KACrC,kBAAC,IAAD,CAAO6F,OAAK,EAACC,KAAO,wBAAwBC,UAAanC,KACzD,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAO,gCAAgCC,UAAaV,KACjE,kBAAC,IAAD,CAAOS,KAAK,QAAQC,UAAW1F,KAC/B,kBAAC,IAAD,CAAOwF,OAAK,EAACC,KAAK,cAAcC,UAAWnF,M,4DChBlC,SAASqF,KAAW,IAAD,EACIlN,oBAAS,GADb,mBACzBmN,EADyB,KACbC,EADa,OAEMpN,qBAFN,mBAEzBqN,EAFyB,KAEZC,EAFY,KAgBhC,SAASC,IAEPH,GAAeD,GAGjB,OAjBAjJ,qBAAU,WAAM,4CACd,4BAAApF,EAAA,sEAC2BX,IAD3B,OACQY,EADR,OAEEuO,EAAevO,GAFjB,4CADc,uBAAC,WAAD,wBAKdyO,KACC,CAACH,IAYF,yBAAK3Q,UAAU,UAEb,yBAAKA,UAAU,YACb,4BAAQC,QAAS4Q,EAAc7Q,UAAU,gBACvC,yBAAKA,UAAU,aAAaI,IAAK2Q,SAIrC,yBAAK/Q,UAAU,WACb,yBAAKA,UAAU,YACb,kBAAC,KAAD,CAASgR,GAAG,KACV,yBAAKhR,UAAU,WAAWI,IAAK6Q,SAGnC,yBAAKjR,UAAU,eACb,kBAAC,KAAD,CAASkR,gBAAgB,SAASF,GAAG,YACnC,yBAAKhR,UAAU,cAAcI,IAAKuQ,IAClC,wBAAI3Q,UAAU,QAAd,gBAIN,yBACEA,UAAWyQ,EAAa,SAAW,YACnCxQ,QAAS4Q,GAET,6BACE,kBAAC,KAAD,CAAS7Q,UAAU,aAAakR,gBAAgB,SAASF,GAAG,WAC1D,wBAAIhR,UAAU,QAAd,cAGJ,yBAAKA,UAAU,YACb,kBAAC,KAAD,CAASkR,gBAAgB,SAASF,GAAG,SACnC,wBAAIhR,UAAU,QAAd,UAGJ,yBAAKA,UAAU,YACb,kBAAC,KAAD,CAASkR,gBAAgB,SAASF,GAAG,SACnC,wBAAIhR,UAAU,QAAd,WAGJ,yBAAKA,UAAU,kBACb,kBAAC,KAAD,CAASkR,gBAAgB,SAASF,GAAG,eACnC,wBAAIhR,UAAU,QAAd,mBC5DQmR,QACW,cAA7BzP,OAAOC,SAASyP,UAEe,UAA7B1P,OAAOC,SAASyP,UAEhB1P,OAAOC,SAASyP,SAAStK,MACvB,2DCVNuK,IAASC,OACT,kBAAC,KAAD,KACI,mBCLW,WACb,OACE,yBAAKtR,UAAU,OACb,yBAAKA,UAAU,OACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,eACb,kBAACmQ,GAAD,UDFJ,OACOoB,SAASC,eAAe,SDwH7B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrS,MAAK,SAAAsS,GACJA,EAAaC,gBAEdtS,OAAM,SAAAC,GACLf,QAAQe,MAAMA,EAAMsC,c","file":"static/js/main.c508bcf5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Content.30614336.png\";","module.exports = __webpack_public_path__ + \"static/media/fakeouticon.28924b54.png\";","module.exports = __webpack_public_path__ + \"static/media/trivia.0fafdd26.png\";","module.exports = __webpack_public_path__ + \"static/media/discussion.1770edd1.png\";","module.exports = __webpack_public_path__ + \"static/media/prof.647678d0.png\";","module.exports = __webpack_public_path__ + \"static/media/stationappdemo.82e23917.png\";","module.exports = __webpack_public_path__ + \"static/media/game.3204b0fa.png\";","module.exports = __webpack_public_path__ + \"static/media/teamup.ab2fd001.png\";","module.exports = __webpack_public_path__ + \"static/media/r.74beef0f.png\";","module.exports = __webpack_public_path__ + \"static/media/r1.1e9aa94b.png\";","module.exports = __webpack_public_path__ + \"static/media/r2.00384dc9.png\";","module.exports = __webpack_public_path__ + \"static/media/Miami.b4a68f33.png\";","module.exports = __webpack_public_path__ + \"static/media/Tenno.ef78506b.png\";","module.exports = __webpack_public_path__ + \"static/media/Individual.b4e99ef3.png\";","module.exports = __webpack_public_path__ + \"static/media/rocket32p.b96283a0.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.5c51a8e2.png\";","module.exports = __webpack_public_path__ + \"static/media/logof.87dd797e.png\";","module.exports = __webpack_public_path__ + \"static/media/menu1.174d5fd5.png\";","import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAJVnoO1MSI3PWoFupBqH_K7P2VOCkkcb8\",\n    authDomain: \"the-station-c5245.firebaseapp.com\",\n    databaseURL: \"https://the-station-c5245.firebaseio.com\",\n    projectId: \"the-station-c5245\",\n    storageBucket: \"the-station-c5245.appspot.com\",\n    messagingSenderId: \"487461900526\",\n    appId: \"1:487461900526:web:7fced99b1bef874e4923ff\",\n    measurementId: \"G-YBRBHFXBYK\"\n  };\n\n\n  firebase.initializeApp(firebaseConfig)\n\n  export default firebase;","import firebase from './firebase'\nimport { saveUser } from './Backend/UsersDB'\nimport ProImg from './Images/Icons/prof.png'\n\nexport default {\n  getProfileImg () {\n    return localStorage.getItem('profileImg') || ProImg\n  },\n\n  getUserName () {\n    return localStorage.getItem('userName')\n  },\n\n  saveUserData () {\n    // const user = firebase.auth().currentUser;\n    // const profileImg = user.photoURL;\n    console.log('saving user data')\n\n    // localStorage.setItem(profileImg, profileImg);\n  },\n  saveUser (user) {\n    console.log(user.photoURL)\n    //Save User to DB\n    saveUser(user.displayName)\n\n    localStorage.setItem('userName', user.displayName)\n    localStorage.setItem('profileImg', user.photoURL)\n    localStorage.setItem('idToken', user.id_token)\n    localStorage.setItem('accessToken', user.access_token)\n  },\n  saveToken (token) {\n    console.log('token = ' + token)\n    localStorage.setItem('token', token)\n  },\n\n  isMember () {\n    const user = firebase.auth().currentUser\n\n    if (user) {\n      console.log('there is a user logged in')\n      return true\n    } else {\n      console.log('no user in yet')\n      return false\n    }\n  },\n\n  isAuthenticated () {\n    const id_token = this.getToken()\n    const access_token = this.getAccessToken()\n    const expires_in = this.getTokenExpiration()\n\n    if (!id_token || !access_token) {\n      return false\n    }\n    try {\n      if (expires_in === 0) {\n        return false\n      }\n    } catch (err) {\n      return false\n    }\n\n    return true\n  }\n}\n","import firebase from 'firebase'\n\nexport function somethin () {\n  console.log('reee')\n}\n\nexport function saveUser (userName) {\n  firebase\n    .firestore()\n    .collection('Users')\n    .doc(userName)\n    .set({\n      name: 'Chase',\n      state: 'OH',\n      country: 'USA'\n    })\n    .then(function () {\n      console.log('Document successfully written!')\n    })\n    .catch(function (error) {\n      console.error('Error writing document: ', error)\n    })\n}\n","import React, { useState, useEffect } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport '../HomePage.scss'\nimport ContentIcon from '../../../Images/Icons/Content.png'\nimport GamesIcon from '../../../Images/Icons/game.png'\nimport ActivityIcon from '../../../Images//Icons/teamup.png'\nimport './CreateInfoCard.scss'\n\nexport default function CreateInfoCard () {\n  const history = useHistory()\n\n  return (\n    <div className='CreateInfoCard' onClick = {e => {history.push('/create')}}>\n      \n      <h1> Create</h1>\n      <p> stations to play with your team by adding content, games, and activities</p>\n        <div className=\"Icons\">\n          <div className =\"Content\">\n          <img className='Icon' src={ContentIcon} />\n          Content\n        </div>\n        <div className =\"Game\">\n      <img className='Icon' src={GamesIcon} />\n        Games\n      </div>\n      <div className =\"Activity\">\n      <img className='Icon' src={ActivityIcon} />\n      Activities\n      </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport RocketIcon from '../../../Images/Rocket/r.png'\nimport Rocket4 from '../../../Images/Rocket/r1.png'\nimport Rocket32 from '../../../Images/Rocket/r2.png'\nimport './JoinInfoCard.scss'\n\nexport default function CreateInfoCard () {\n  const history = useHistory()\n\n  return (\n    <div className='JoinInfoCard' onClick = {e => {history.push('/join')}}>\n      \n      <h1> Join</h1>\n      <p> stations being hosted by entering a rocket code</p>\n      <div className=\"Icons\" >\n      <img className='Icon' src={Rocket4} />\n      <img className='Icon' src={RocketIcon} />\n      <img className='Icon' src={Rocket32} />\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport CollegesIcon from '../../../Images/Miami.png'\nimport CompaniesIcon from '../../../Images/Tenno.png'\nimport IndividualsIcon from '../../../Images/Individual.png'\nimport './FindInfoCard.scss'\n\nexport default function FindInfoCard () {\n  const history = useHistory()\n\n  return (\n    <div className='FindInfoCard' onClick = {e => {history.push('/find')}}>\n      \n      <h1> Find</h1>\n      <p> stations to host created by companies, colleges, or individual members</p>\n      <div className=\"Icons\" >\n      <img className='Icon' src={CompaniesIcon} />\n      <img className='Icon' src={CollegesIcon} />\n      <img className='Icon' src={IndividualsIcon} />\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport './HomePage.scss'\nimport StationLogo from '../../Images/stationappdemo.png'\nimport CreateInfoCard from './Cards/CreateInfoCard'\nimport JoinInfoCard from './Cards/JoinInfoCard'\nimport FindInfoCard from './Cards/FindInfoCard'\n\nexport default function HomePage () {\n  const history = useHistory()\n\n  return (\n    <div className='HomePage'>\n      <img className='LogoName' src={StationLogo} />\n      <h3 className = \"slogan \">learn, play, create together</h3>\n\n       <p className= 'define'>stations are team games that include trivia, discussions, challenges, and activities</p>\n      \n       <div className = \"LineDiv\"></div>\n\n      <div className= \"Info\">\n      <CreateInfoCard />\n      <div className = \"LineDiv\"></div>\n      <FindInfoCard />\n      <div className = \"LineDiv\"></div>\n      <JoinInfoCard />\n\n      </div>\n\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport firebase from '../../firebase'\nimport Auth from '../../Auth'\nimport { useLocation } from 'react-router-dom'\nimport './ProfilePage.scss'\n\nexport default function SignInPage () {\n  var provider = new firebase.auth.GoogleAuthProvider()\n\n  function signInWithGoogle () {\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then(function (result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken\n        // The signed-in user info.\n        var user = result.user\n\n        //Saving user\n        Auth.saveUser(user)\n        Auth.saveToken(token)\n        Auth.saveUserData()\n        window.location.reload()\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code\n        var errorMessage = error.message\n        // The email of the user's account used.\n        var email = error.email\n        // The firebase.auth.AuthCredential type that was used.\n        var credential = error.credential\n\n        console.log('ERROR WHEN sgning in')\n        // ...\n      })\n  }\n\n  function signOutWithGoogle () {\n    firebase\n      .auth()\n      .signOut()\n      .then(function () {\n        console.log('signed out')\n\n        window.location.reload()\n        localStorage.clear()\n        // Sign-out successful.\n      })\n      .catch(function (error) {\n        // An error happened.\n        console.log('ERROR WHEN signing out')\n      })\n  }\n\n  return (\n    <div className='ProfilePage'>\n      <h1>Profile</h1>\n      <p>customize your member profile </p>\n      <div className='GoogleSignInOut'>\n        <button className = \"GoogleSignIn\" onClick={signInWithGoogle}>SIGN IN W/Google </button>\n        <button className = \"GoogleSignOut\" onClick={signOutWithGoogle}>SIGN OUT W/Google</button>\n      </div>\n    </div>\n  )\n}\n\n// const [email, setEmail] = useState();\n// const [password, setPassword] = useState();\n// function handleEmailChange(event) {\n//   setEmail(event.target.value);\n\n//   console.log(email);\n// }\n// function handlePasswordChange(event) {\n//   setPassword(event.target.value);\n//   console.log(password);\n// }\n\n// //function setEmail(event) {}\n\n// //function setPassword(event) {}\n\n// function createUserWithEmailAndPassword() {\n//   firebase.auth();\n//   firebase\n//     .auth()\n//     .createUserWithEmailAndPassword(email, password)\n//     .then(function(result) {\n//       console.log(result);\n//       console.log(\"signed in\");\n//     })\n//     .catch(function(error) {\n//       // Handle Errors here.\n//       var errorCode = error.code;\n//       var errorMessage = error.message;\n//       // ...\n\n//       console.log(errorMessage);\n//       console.log(\"songohaogh\");\n//     });\n\n//   console.log(\"trying\");\n// }\n\n// function signInWithEmailAndPassword() {\n//   firebase\n//     .auth()\n//     .signInWithEmailAndPassword(email, password)\n//     .catch(function(error) {\n//       // Handle Errors here.\n//       var errorCode = error.code;\n//       var errorMessage = error.message;\n//       // ...\n//     });\n// }\n\n// function signOutWithEmailAndPassword() {\n//   firebase\n//     .auth()\n//     .signOut()\n//     .then(function() {\n//       // Sign-out successful.\n//     })\n//     .catch(function(error) {\n//       // An error happened.\n//     });\n// }\n\n// function phoneNumberSignIn() {\n//   firebase.auth().languageCode = \"it\";\n\n//   window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\n//     \"recaptcha-container\",\n//     {\n//       size: \"normal\",\n//       callback: function(response) {\n//         // reCAPTCHA solved, allow signInWithPhoneNumber.\n//         // ...\n//         console.log(\"it worked\");\n//       },\n//       \"expired-callback\": function() {\n//         // Response expired. Ask user to solve reCAPTCHA again.\n//         // ...\n\n//         console.log(\"retry\");\n//       }\n//     }\n//   );\n// }\n/* <div className=\"PhoneSignInOut\">\n        <form className=\"CreateUser\">\n          <label>\n            email:\n            <input type=\"text\" name=\"email\" onChange={handleEmailChange} />\n          </label>\n          <label>\n            password:\n            <input\n              type=\"text\"\n              name=\"password\"\n              onChange={handlePasswordChange}\n            />\n          </label>\n          <button type=\"submit\" onClick={createUserWithEmailAndPassword}>\n            Create User w/Email\n          </button>\n        </form>\n        <form className=\"SignInUser\">\n          <label>\n            email:\n            <input type=\"text\" name=\"email\" onChange={handleEmailChange} />\n          </label>\n          <label>\n            password:\n            <input\n              type=\"text\"\n              name=\"password\"\n              onChange={handlePasswordChange}\n            />\n          </label>\n          <button onClick={signInWithEmailAndPassword}>Sign In W/Email</button>\n        </form>\n\n        <button onClick={signOutWithEmailAndPassword}>Sign Out W/Email</button>\n      </div> */\n","import firebase from '../firebase'\nimport Auth from '../Auth'\n\n\nexport async function addStation (station) {\n  console.log('add Station to firestore')\n  const userName = Auth.getUserName()\n  const profileImg = Auth.getProfileImg()\n\n  const newStation = firebase\n    .firestore()\n    .collection('Stations')\n    .add({\n      stationID: '',\n      creatorID: userName,\n      creatorImage: profileImg,\n      title: station.title,\n      category: station.category,\n      description: station.description,\n      crewSize: station.crewSize,\n      time: station.time,\n      share: station.share\n    })\n    .then(function (docRef) {\n      console.log('Document written with ID: ', docRef.id)\n      setStationID(docRef.id)\n    })\n    .catch(function (error) {\n      console.error('Error adding document: ', error)\n    })\n\n  function setStationID (id) {\n    const newStationID = firebase\n      .firestore()\n      .collection('Stations')\n      .doc(id)\n      .update({\n        stationID: id\n      })\n  }\n}\n\nexport async function createStation (station, newID) {\n  console.log('add Station to firestore')\n  const userName = Auth.getUserName()\n  const profileImg = Auth.getProfileImg()\n\n  const newStation = firebase\n    .firestore()\n    .collection('Stations')\n    .doc(newID)\n    .set({\n      stationID: newID,\n      creatorID: userName,\n      creatorImage: profileImg,\n      title: station.title,\n      category: station.category,\n      description: station.description\n    })\n    .then(function (docRef) {\n      //console.log('Document written with ID: ', docRef.id)\n    })\n    .catch(function (error) {\n      console.error('Error adding document: ', error)\n    })\n\n  // function setStationID (id) {\n  //   const newStationID = firebase\n  //     .firestore()\n  //     .collection('Stations')\n  //     .doc(id)\n  //     .update({\n  //       stationID: id\n  //     })\n  // }\n}\n\nexport async function addImgToStation (imgContent, stationID) {\n  const newStation = firebase\n    .firestore()\n    .collection('Stations')\n    .doc(stationID)\n    .update({\n      sequence: firebase.firestore.FieldValue.arrayUnion(imgContent)\n    })\n    .then(function (docRef) {\n      //console.log('Document written with ID: ', docRef.id)\n    })\n    .catch(function (error) {\n      console.error('Error adding document: ', error)\n    })\n}\n\nexport async function addVidToStation (vidContent, stationID) {}\n\nexport async function addFakeoutToStation(fakeout, stationID){\n  const newStation = firebase\n  .firestore()\n  .collection('Stations')\n  .doc(stationID)\n  .update({\n    sequence: firebase.firestore.FieldValue.arrayUnion(fakeout)\n  })\n  .then(function (docRef) {\n    //console.log('Document written with ID: ', docRef.id)\n  })\n  .catch(function (error) {\n    console.error('Error adding document: ', error)\n  })\n\n  \n}\n\nexport async function getStationData (stationID) {\n  let docRef = firebase\n    .firestore()\n    .collection('Stations')\n    .doc(stationID)\n\n  let docData\n\n  const stationData = docRef\n    .get()\n    .then(function (doc) {\n      if (doc.exists) {\n        console.log('Document data:', doc.data())\n        docData = doc.data()\n        return docData\n      } else {\n        // doc.data() will be undefined in this case\n        console.log('No such document!')\n        return docData\n      }\n    })\n    .catch(function (error) {\n      console.log('Error getting document:', error)\n    })\n  return stationData\n}\n\nexport function updateSlides(stationID, slides){\n  firebase.firestore().collection('Stations').doc(stationID).update({\n    slides\n  })\n}\n\n\nexport async function getStationList() {\n  const stations = firebase.firestore().collection('Stations').get()\n  return stations\n}\n\n\nexport async function getStation(stationID){\n\n\n  console.log(stationID)\n  const stations = firebase.firestore().collection('Stations').doc(stationID).get()\n  return stations\n}\n\n\n\n\nexport async function addUserToActivity (activityID) {\n  const userName = Auth.getUserName()\n  const profileImg = Auth.getProfileImg()\n\n  console.log('put user in firestore')\n  const activities = firebase\n    .firestore()\n    .collection('Activities')\n    .doc(activityID)\n    .collection('MembersGoing')\n    .doc(userName)\n    .set({\n      name: userName,\n      profileImg: profileImg\n    })\n  return activities\n}\n\nexport async function deleteUserFromActivity (activityID) {\n  const userName = Auth.getUserName()\n\n  const deleteUser = firebase\n    .firestore()\n    .collection('Activities')\n    .doc(activityID)\n    .collection('MembersGoing')\n    .doc(userName)\n    .delete()\n}\n\nexport async function createSession(stationID, newID) {\n  console.log('create new Session in firestore')\n  const userName = Auth.getUserName()\n  const profileImg = Auth.getProfileImg()\n\n  const newSession= firebase\n    .firestore()\n    .collection('Sessions')\n    .doc(newID)\n    .set({\n      sessionID: newID,\n      stationID: stationID,\n      hostName: userName,\n      hostImg: profileImg,\n      slideNum: 0\n    })\n    .then(function (docRef) {\n      //console.log('Document written with ID: ', docRef.id)\n    })\n    .catch(function (error) {\n      console.error('Error adding document: ', error)\n    })\n\n}","import React, { useState } from 'react'\nimport { addStation, createStation } from '../../Backend/StationsDB'\nimport { Link, useHistory } from 'react-router-dom'\nimport './CreatePage.scss'\n\nexport default function CreatePage () {\n  const [station, setStation] = useState({\n    stationID: '',\n    title: '',\n    category: '',\n    description: ''\n  })\n\n  const history = useHistory()\n\n  function handleTitleChange (event) {\n    const titleValue = event.target.value\n    setStation(curActivity => {\n      return {\n        ...curActivity,\n        title: titleValue\n      }\n    })\n  }\n  function handleCategoryChange (event) {\n    const categoryValue = event.target.value\n    setStation(curActivity => {\n      return {\n        ...curActivity,\n        category: categoryValue\n      }\n    })\n  }\n  function handleDescriptionChange (event) {\n    const descriptionValue = event.target.value\n    setStation(curActivity => {\n      return {\n        ...curActivity,\n        description: descriptionValue\n      }\n    })\n  }\n\n  function startCreateStation (event) {\n\n    //Generates StationID\n    let stationString =\n      'station' +\n      Math.random()\n        .toString(36)\n        .substring(7)\n    let stationNum = Math.floor(1000 + Math.random() * 9000)\n    const newID = stationString + stationNum\n\n    setStation(curActivity => {\n      return {\n        ...curActivity,\n        stationID: newID\n      }\n    })\n    createStation(station, newID)\n\n    history.push('/create/' + newID)\n    event.preventDefault()\n  }\n\n  return (\n    <div className='CreatePage'>\n      <h1>Create</h1>\n      <p>\n        create an interactive station with content, trivia, games, and\n        activities\n      </p>\n      <form className='CreatePageForm'>\n        <div className=\"input\">\n          <label > title </label>\n          <input id='title' type='text' name='title' onChange={handleTitleChange} />\n        </div>\n        <div className=\"input\">\n          <label > category </label>\n          <input id='category' type='text' name='category' onChange={handleCategoryChange} />\n        </div>\n        <div className=\"input\">\n          <label> description </label>\n          <input type='text' name='description' onChange={handleDescriptionChange} />\n        </div>\n        <button className='CreateButton' type='submit' onClick={startCreateStation}> START CREATING! </button>\n      </form>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport firebase from '../../../firebase'\nimport { addImgToStation, addVidToStation } from '../../../Backend/StationsDB'\nimport { Link } from 'react-router-dom'\nimport { Form } from 'react-advanced-form'\nimport './ContentInputCard.scss'\n\nexport default function ContentInputCard (props) {\n  const {data, updateData} = props\n\n  //CONTENT\n\n  function saveImg (event) {\n    let file = event.target.files[0]\n\n    // Create a root reference\n    var storageRef = firebase.storage().ref()\n\n    //Get randomimgID\n    let imgString =\n      'img' +\n      Math.random()\n        .toString(36)\n        .substring(7)\n    //console.log('random', imgString)\n    let imgNum = Math.floor(1000 + Math.random() * 9000)\n    //console.log(imgNum)\n    let imgName = imgString + imgNum\n\n    updateData('fileName', imgName)\n\n    // // Create a reference to 'mountains.jpg'\n    var activityImgRef = storageRef.child('images/' + imgName + '.jpg')\n\n    activityImgRef.put(file).then(function (snapshot) {\n     // console.log('Uploaded a blob or file!')\n    })\n  }\n\n  function saveVid (event) {\n    let file = event.target.files[0]\n\n    // Create a root reference\n    var storageRef = firebase.storage().ref()\n\n    //Get random vid ID\n    let vidString =\n      'vid' +\n      Math.random()\n        .toString(36)\n        .substring(7)\n    //console.log('random', vidString)\n    let vidNum = Math.floor(1000 + Math.random() * 9000)\n    //console.log(vidNum)\n    let vidName = vidString + vidNum;\n\n    updateData('fileName', vidName)\n\n    // // Create a reference to 'mountains.jpg'\n    var activityVidRef = storageRef.child('videos/' + vidName + '.mp4')\n\n    activityVidRef.put(file).then(function (snapshot) {\n      //console.log('Uploaded a blob or file!')\n    })\n  }\n\n\n  return (\n    <div className='ContentInputCard'>\n      <form className='ContentInput'>\n\n        <label>Label</label>\n        <input id = 'title' type='text' value={data['title']}  onChange={e => {updateData('title', e.currentTarget.value )}} />\n\n        <div className=\"Select\"> \n              <div className=\"Image\">\n                <h2>Upload Image:</h2>\n                  <input id='img' type='file' name='imgFile' onChange={saveImg} />\n              </div>\n            <div className=\"Video\">\n                <h2>Upload Video:</h2>\n                <input id = 'vid' type='file' name='vidFile' onChange={saveVid} />\n            </div>\n        </div>\n        \n      </form>\n\n      {data.fileName !== '' && data.fileName}\n\n\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport {addFakeoutToStation} from \"../../../Backend/StationsDB\"\nimport './FakeoutInputCard.scss'\n\nexport default function AddFakeout (props) {\n\n  const {data, updateData} = props\n\n  return (\n    <div className='FakeoutInputCard'>\n        <div className = \"Field\" >\n          <label className = \"Label\" >Enter Fakeout Question</label>\n          <input id = 'question' type='text' value={data['question']}  onChange={e => {updateData('question', e.currentTarget.value )}} />\n        </div>\n        <div className = \"Field\">\n          <label className = \"Label\">Enter Correct Answer</label>\n          <input id = 'answer' type='text' value={data['answer']} onChange={e => {updateData('answer', e.currentTarget.value )}} />\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react'\nimport './MultipleChoiceInputCard.scss'\n\nconst QuestionForm = (props) =>{\n    const {data, updateData} = props\n    const [num, setNum] = useState();\n    const [numOptions, setNumOptions] = useState([0,1,10,100])\n\n    function field (id){\n        return  <input className = \"OptionInput\" type=\"text\" id={id} value={data[id]} onChange={e => {updateData(id, e.currentTarget.value )}} />\n    }\n    function checkbox (id){\n        return <input type=\"checkbox\" checked={data[id]} onChange={e => { updateData(id, e.currentTarget.checked) }} />\n    }\n    function answerField (id){\n        return(\n            <div className=\"Answer\">\n                <div>\n                <label>{id}</label>\n                <label className=\"check\">\n                    {checkbox(id + 'ans')}\n                </label>\n                </div>\n                <div className=\"AnswerField\">\n                    {field(id)}\n                </div>\n            </div>\n        )\n    }\n    \n    return (\n        <div className=\"MultipleChoiceInputCard\">\n            <form className = \"MCForm\">\n                <div className=\"Question\">\n                    <div className=\"field\">\n                        <label htmlFor=\"question\">Question</label>\n                        <input type=\"text\" id='question' value={data['question']} onChange={e => {updateData('question', e.currentTarget.value )}} />\n                    </div>\n                </div>\n                <div className=\"Options\">\n                    <div className=\"Red\">\n                        {answerField('A')}\n                    </div>\n                    <div className=\"Blue\">\n                        {answerField('B')}\n                    </div>\n                    <div className=\"Yellow\">\n                        {answerField('C')}\n                    </div>\n                    <div className=\"Green\">\n                        {answerField('D')}\n                    </div>\n\n                    <div className = \"Points\">\n                <label className=\"Label\">Point Value</label>\n                        <select className = \"Select\" onChange = {e => {updateData('points', e.currentTarget.value )}} value = {data['points']}>\n                            {numOptions.map((num) => {\n                                return ( \n                                <option value = {num} key = {num}>\n                                    {num}\n                                </option>\n                                );\n                            })\n                            }\n                            </select>\n                    </div>\n\n                    <div className = \"Time\">\n                <label className=\"Label\">Sec To Answer</label>\n                        <select className = \"Select\" onChange = {e => {updateData('time', e.currentTarget.value )}} value = {data['time']}>\n                            {numOptions.map((num) => {\n                                return ( \n                                <option value = {num} key = {num}>\n                                    {num}\n                                </option>\n                                );\n                            })\n                            }\n                            </select>\n                    </div>\n                    </div>\n            </form>\n        </div>\n    )\n}\n\nexport default QuestionForm","import React, { useState } from 'react'\nimport './StationSequence.scss'\nimport ContentIcon from '../../../../Images/Icons/Content.png'\n\nimport FakeoutIcon from '../../../../Images/Icons/fakeouticon.png'\n\nimport MultipleChoiceIcon from '../../../../Images/Icons/trivia.png'\nimport DiscussionIcon from '../../../../Images/Icons/discussion.png'\n\nexport default function StationSequence (props) {\n  const { stationID, slides, setSlide } = props\n\n  \n\n  function itemCard (num, title, question, type){\n    return (\n      <div className='SequenceSlide' onClick={e => {e.preventDefault(); setSlide(num);}}>\n        {num+1}\n        {'  '}\n        {title}\n        {question}\n        {'  ('}\n        {type}\n        {')'}\n\n        {(type == 'content') &&\n        <img className='Icon' src={ContentIcon} />\n        }\n        {(type == 'multipleChoice') &&\n        <img className='Icon' src={MultipleChoiceIcon} />\n        }\n          {(type == 'fakeout') &&\n        <img className='Icon' src={FakeoutIcon} />\n        }\n         {(type == 'discussion') &&\n        <img className='Icon' src={DiscussionIcon} />\n        }\n\n\n      </div>\n    )\n  }\n\n  return (\n    <div className='StationSequence'>\n      {slides.map((element, num) => \n        <div> \n          {itemCard(num,element.title, element.question, element.type)}\n        </div>\n      )}\n\n    </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport firebase from \"../../../firebase\";\nimport './DiscussionInputCard.scss'\n\nfunction DiscussionInputCard(props) {\n  const { data, updateData } = props;\n\n  return (\n    <div className=\"DiscussionInputCard\">\n        <div className=\"Field\">\n          <label className = 'Label' htmlFor=\"question\">Discussion Question:</label>\n          <input\n            type=\"text\"\n            id=\"question\"\n            value={data[\"question\"]}\n            onChange={(e) => {\n              updateData(\"question\", e.currentTarget.value);\n            }}\n          />\n        </div>\n    </div>\n  );\n}\n\nexport default DiscussionInputCard;\n","import React, { useState, useEffect } from 'react'\nimport firebase from '../../../firebase'\nimport {\n  addImgToStation,\n  addVidToStation,\n  getStationData,\n  updateSlides\n} from '../../../Backend/StationsDB'\nimport { Link } from 'react-router-dom'\nimport ContentInputCard from '../../../Components/Content/ContentEditor/ContentInputCard'\nimport FakeoutInputCard from '../../../Components/Fakeout/FakeoutEditor/FakeoutInputCard'\nimport QuestionForm from '../../../Components/MultipleChoice/MCEditor/MultipleChoiceInputCard'\nimport StationSequence from './SequenceBar/StationSequence'\nimport DiscussionInputCard from '../../../Components/Discussion/DiscussionEditor/DiscussionInputCard'\nimport './CreateStationPage.scss'\nimport FakeoutIcon from '../../../Images/Icons/fakeouticon.png'\n\nimport ContentIcon from '../../../Images/Icons/Content.png'\n\nimport DiscussionIcon from '../../../Images/Icons/discussion.png'\n\nimport TriviaIcon from '../../../Images/Icons/trivia.png'\n\n\nexport default function CreateStationPage (props) {\n  const { stationID } = props.match.params\n  const [station, setStation] = useState([])\n  const [slides, setSlides] = useState(  [\n    {\n      type: 'content',\n      title: 'Title'\n    }\n  ])\n  const [slideNum, setSlideNum] = useState(0);\n\n  const [rand, setRand] = useState(0);\n  const [dataDirty, setDataDirty] = useState(false);\n\n\n\n  const selectedValue = slides[slideNum]?.type;\n\n\n  useEffect(() => {\n    loadStation()\n  }, [stationID])\n  const loadStation = async () => {\n    const stationData = await getStationData(stationID)\n    setStation(stationData)\n    if(stationData.slides)\n    setSlides(stationData.slides)\n  }\n\n\n  function selectCreate (e) {\n    //setSelectedValue(e.target.value)\n    //console.log(e.target.value)\n  }\n\n  function addSlide(e){\n\n   // console.log(\"adding\")\n\n\n\n    setDataDirty(true);\n    setSlideNum(slides.length);\n      if(e.target.value === 'fakeout')\n        setSlides([...slides, {\n          type: 'fakeout',\n          question: '', \n          title: '',\n        } ])\n      if(e.target.value === 'content')\n        setSlides([...slides, {\n          type: 'content',\n          title: '',\n        } ])\n      if(e.target.value === 'multipleChoice')\n        setSlides([...slides, {\n          type: 'multipleChoice',\n          question: '', A: '', B: '', C: '', D: '', Aans: false, Bans: false, Cans: false, Dans: false\n        } ])\n        if (e.target.value === \"discussion\")\n          setSlides([\n            ...slides,\n            {\n              type: \"discussion\",\n              question: \"\"\n            },\n          ]);\n  }\n\n  const updateData = (id, value) => {\n    var q = slides;\n    q[slideNum][id] = value;\n    setSlides(q);\n\n    setRand(Math.random() + rand); //force page update\n\n    setDataDirty(true);\n  }\n\n  function save(e){\n    \n    setDataDirty(false);\n    updateSlides(stationID, slides)\n\n  }\n\n  return (\n    <div className=\"CreateStationPage\">\n      <h10>{stationID}</h10>\n      <button className = \"SaveButton\" onClick={save}>Save</button>\n      {dataDirty && \"Unsaved Changes!\"}\n\n      <p>here are the tools to create your {station?.title} station</p>\n\n\n        <div className=\"AddOptions\">\n\n\n        <div className = \"Option\">\n          <img className = \"Icon\" src = {ContentIcon} />\n          <button value=\"content\" onClick={addSlide}>\n            {\" \"}\n            add content{\" \"}\n          </button>\n          </div>\n\n          <div className = \"Option\">\n          <img className = \"Icon\" src = {FakeoutIcon} />\n          <button value=\"fakeout\" onClick={addSlide}>\n            {\" \"}\n            add fakeout{\" \"}\n          </button>\n          </div>\n\n          {/* <button value=\"fakeout\" onClick={addSlide}>\n            {\" \"}\n            add fakeout{\" \"}\n          </button> */}\n          <div className=\"Option\">\n\n          <img className = \"Icon\" src = {TriviaIcon} />\n          <button value=\"multipleChoice\" onClick={addSlide}>\n            {\" \"}\n            add trivia{\" \"}\n          </button>\n          </div>\n          <div className = \"Option\">\n\n          <img className = \"Icon\" src = {DiscussionIcon} />\n          <button value=\"discussion\" onClick={addSlide}>\n            {\" \"}\n            add discussion{\" \"}\n          </button>\n          </div>\n\n      </div>\n          \n        <div className=\"InputCard\">\n          {selectedValue === \"content\" && (\n            <ContentInputCard data={slides[slideNum]} updateData={updateData} />\n          )}\n          {selectedValue == \"fakeout\" && (\n            <FakeoutInputCard data={slides[slideNum]} updateData={updateData} />\n          )}\n          {selectedValue == \"multipleChoice\" && (\n            <QuestionForm data={slides[slideNum]} updateData={updateData} />\n          )}\n          {selectedValue == \"discussion\" && (\n            <DiscussionInputCard data={slides[slideNum]} updateData={updateData} />\n          )}\n        </div>\n\n\n        <div className = \"Sequence\">\n        <StationSequence\n            stationID={stationID}\n            slides={slides}\n            setSlide={setSlideNum}\n          />\n          </div>\n    </div>\n  );\n}\n","import firebase from '../firebase'\nimport Auth from '../Auth'\n\n\n\n\nexport async function setMetaData(sessionID, Data) {\n  const newResponse= firebase.firestore()\n  .collection('Sessions').doc(sessionID)\n  .update({\n    MetaData: Data\n  })\n}\n\nexport async function addUserResponse(sessionID, userID, responseData) {\n\n\n  const newResponse= firebase\n  .firestore()\n  .collection('Sessions')\n  .doc(sessionID)\n  .collection('Users').doc(userID)\n  .update({\n    responses: responseData\n  })\n  .then(function (docRef) {\n    //console.log('Document written with ID: ', docRef.id)\n  })\n  .catch(function (error) {\n    console.error('Error adding document: ', error)\n  })\n\n}\n\n\nexport async function addToPlayerScore(sessionID, userID, score) {\n\n\n  console.log(score)\n\n  if(score > 0){\n  const increment = firebase.firestore.FieldValue.increment(score);\n\n\n  const newResponse= firebase\n  .firestore()\n  .collection('Sessions')\n  .doc(sessionID)\n  .collection('Users').doc(userID)\n  .update({\n    score: increment\n  })\n  .then(function (docRef) {\n    //console.log('Document written with ID: ', docRef.id)\n  })\n  .catch(function (error) {\n    console.error('Error adding document: ', error)\n  })\n}\n\n}\n\n\n\n\nexport async function createSession(stationID, newID) {\n  console.log('create new Session in firestore')\n  const userName = Auth.getUserName()\n  const profileImg = Auth.getProfileImg()\n\n  const newSession= firebase\n    .firestore()\n    .collection('Sessions')\n    .doc(newID)\n    .set({\n      sessionID: newID,\n      stationID: stationID,\n      hostName: userName,\n      hostImg: profileImg,\n      slideNum: -1,\n      gameOver: false\n    })\n    .then(function (docRef) {\n      //console.log('Document written with ID: ', docRef.id)\n    })\n    .catch(function (error) {\n      console.error('Error adding document: ', error)\n    })\n\n}\n\n// export async function createSession(stationID, newID) {\n//   console.log('create new Session in firestore')\n//   const userName = Auth.getUserName()\n//   const profileImg = Auth.getProfileImg()\n\n//   const newSession= firebase\n//     .firestore()\n//     .collection('Sessions')\n//     .doc(newID)\n//     .set({\n//       sessionID: newID,\n//       stationID: stationID,\n//       hostName: userName,\n//       hostImg: profileImg,\n//       slideNum: 0\n//     })\n//     .then(function (docRef) {\n//       //console.log('Document written with ID: ', docRef.id)\n//     })\n//     .catch(function (error) {\n//       console.error('Error adding document: ', error)\n//     })\n\n// }\n\n\nexport async function incrementSlide(sessionID){\n\n    console.log(sessionID)\n\n\n    const increment = firebase.firestore.FieldValue.increment(1);\n\n  const nextSlide= firebase\n  .firestore()\n  .collection('Sessions')\n  .doc(sessionID)\n  .update({\n      slideNum: increment,\n      state: 'reset'\n  })\n  .then(function (docRef) {\n    //console.log('Document written with ID: ', docRef.id)\n    console.log(\"do it\")\n  })\n  .catch(function (error) {\n    console.error('Error adding document: ', error)\n  })\n}\n\nexport  function setSlideState(sessionID, state){\n  firebase.firestore()\n  .collection('Sessions').doc(sessionID)\n  .update({\n      state: state \n  })\n}\n\n// export async function getUsersList(sessionID){\n//     // const users = firebase.firestore().collection('Sessions').doc(sessionID).collection('Users').get()\n//     // return users\n\n\n//     const users = firebase.firestore().collection('Sessions').doc(sessionID).collection('Users')\n//     .onSnapshot(function(doc) {\n//         var source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\n//         console.log(source, \" data: \", doc.data());\n       \n//     });\n\n// }\n\n\nexport async function getUsersList(handleUsersRefresh,sessionID){\n\n  const users = firebase.firestore().collection('Sessions').doc(sessionID).collection('Users').onSnapshot(function(doc) {\n        handleUsersRefresh(doc)\n    });\n\n}\n\nexport async function getSessionData(handleSessionRefresh, sessionID){\n    const session = firebase.firestore().collection('Sessions').doc(sessionID).onSnapshot(function(doc) {\n        handleSessionRefresh(doc.data())\n    });\n}\n\nexport async function getStationID(sessionID){\n    const session = firebase.firestore().collection('Sessions').doc(sessionID).get()\n  return session.stationID\n}\n\n\nexport async function addUserToSession(sessionID, newUserID, user){\n    console.log(sessionID)\n    console.log(user)\n\n  const newUser= firebase\n  .firestore()\n  .collection('Sessions')\n  .doc(sessionID)\n  .collection('Users').doc(newUserID)\n  .set({\n      id: newUserID,\n      name: user.name\n\n  })\n  .then(function (docRef) {\n    //console.log('Document written with ID: ', docRef.id)\n  })\n  .catch(function (error) {\n    console.error('Error adding document: ', error)\n  })\n}\n\nexport function listenUserData(sessionID, userID, listener){\n  \n  let docRef = firebase.firestore()\n    .collection('Sessions').doc(sessionID)\n    .collection('Users').doc(userID).onSnapshot(\n      snap => listener(snap.data())\n  )\n\n}\n\n\nexport async function getUserData(sessionID, userID){\n\n  console.log(sessionID, userID)\n\n  let docRef = firebase\n  .firestore()\n  .collection('Sessions')\n  .doc(sessionID).collection('Users').doc(userID)\n\nlet docData\n\nconst userData = docRef\n  .get()\n  .then(function (doc) {\n    if (doc.exists) {\n      console.log('Document data:', doc.data())\n      docData = doc.data()\n      return docData\n    } else {\n      // doc.data() will be undefined in this case\n      console.log('No such document!')\n      return docData\n    }\n  })\n  .catch(function (error) {\n    console.log('Error getting document:', error)\n  })\nreturn userData\n\n}\n\nexport  function setGameOverDB(sessionID){\n  firebase.firestore()\n  .collection('Sessions').doc(sessionID)\n  .update({\n      gameOver: true\n  })\n}\n","import React, { useState,NavLink } from 'react'\nimport {useHistory } from 'react-router-dom'\nimport {createSession} from '../../Backend/SessionsDB'\nimport firebase from '../../firebase'\n\n\nexport default function StationCard (props) {\n  const { station } = props\n  const history = useHistory();\n\n  const [showImg, setShowImg] = useState(false);\n  const [img, setImg]  = useState()\n\n\n\n  function downloadImg () {\n\n    let contentID = station?.slides;\n\n    // Create a reference to the file we want to download\n    var storageRef = firebase.storage().ref()\n    if(station?.slides[0]){\n    var starsRef = storageRef.child('images/' + station?.slides[0].fileName + '.jpg')\n    //console.log('getting img')\n    }\n    \n    // Get the download URL\n    const imgUrl = starsRef\n      .getDownloadURL()\n      .then(function (url) {\n        // Insert url into an <img> tag to \"download\"\n        setImg(url)\n        setShowImg(true)\n        //console.log(\"in\")\n      })\n      .catch(function (error) {\n        // A full list of error codes is available at\n        //console.log(\"ig not downloaded\")\n      })\n\n  }\n\n\n  function startPlayingStation (event) {\n\n    // let sessionString =\n    //   'session' +\n    //   Math.random()\n    //     .toString(36)\n    //     .substring(7)\n    // let sessionNum = Math.floor(1000 + Math.random() * 9000)\n    // const newID = sessionString + sessionNum\n\n    var newID = (Math.floor(1000 + Math.random() * 9000)).toString();\n    //console.log(newID);\n    \n\n\n    createSession(station.stationID, newID)\n\n\n    \n    history.push('/play/host/' + newID)\n    event.preventDefault()\n  }\n\n\n  if(station?.slides){\n  if(station?.slides[0] != undefined){\n downloadImg();\n  }\n}\n\n\n  return (\n    <div className='CreatePage card-panel'>\n      <h3>{station?.title || 'N/A'}</h3>\n\n      {showImg &&\n      <img width='320' height='240' src={img} />\n        }\n    \n      <p>{station?.description || 'N/A'} </p>\n\n    <button onClick = {startPlayingStation}>Host Station</button>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport StationCard from '../../Components/Station/StationCard'\nimport {getStationList} from '../../Backend/StationsDB'\nimport './FindPage.scss'\n\nexport default function FindPage () {\n\nconst [stations, setStations] = useState([])\n\n  useEffect(() => {\n    async function getStations () {\n      const list = await getStationList()\n      setStations(list.docs.map(doc => ({ ...doc.data(), id: doc.id })))\n    }\n    getStations()\n  }, [])\n  console.log(stations)\n\n\n  return (\n    <div className = \"FindPage\">\n      <h1>Find</h1>\n      <p>find a station to host</p>\n      <div className='Search'>\n            Search\n            <input id = 'search' type='text' />\n          </div>\n\n      <div className='StationFind'>\n        <div className='Stations'>\n          {stations.map(station => (\n            <div key = {station.id}>\n              <StationCard station={station} />\n            </div>\n          ))}\n        </div>\n      \n\n      </div>\n      \n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport './JoinPage.scss'\nimport { addUserToSession} from '../../Backend/SessionsDB'\nimport InputColor from '../../Components/Player/ColorSelect'\n\nexport default function JoinPage () {\n  const [sessionID, setSessionID] = useState('')\n  const [user, setUser] = useState({})\n\n\n  const history = useHistory()\n\n  function saveSessionID(e){\n    setSessionID(e.target.value)\n  }\n\n\n\n  function saveName (e){\n    let nameValue = e.target.value\n    setUser(curUser => {\n      return {\n        ...curUser,\n        name: nameValue\n\n      }\n    })\n  }\n\n\n\n\n  function joinGame(event){\n\n    //Generate new UserID\n    let userString =\n      'user' +\n      Math.random()\n        .toString(36)\n        .substring(7)\n      let userNum = Math.floor(1000 + Math.random() * 9000)\n      const newUserID = userString +userNum\n\n\n      addUserToSession(sessionID, newUserID, user);\n\n      history.push('/play/user/' + sessionID + '/' + newUserID)\n\n      setUser(curUser => {\n        return {\n        ...curUser,\n        id: newUserID\n       }\n      })\n      event.preventDefault()\n  }\n\n\n  return (\n    <div className='JoinPage'> \n      <h1> Join</h1>\n      <p>join a station being hosted</p>\n      <form className = \"JoinGameForm\" onSubmit = {joinGame}>\n      <label >\n          Enter Code:\n          <input\n            type='text'\n            name='id'\n            onChange={saveSessionID}\n          />\n        </label>\n        <label>\n          Enter Nickname:\n          <input\n            type='text'\n            name='nickname'\n            onChange={saveName}\n          />\n        </label>\n        <button className = \"JoinButton\" >JOIN</button>\n        </form>\n    </div>\n  )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport default function MyStationsPage () {\n  return (\n    <div>\n      <h1>My Stations</h1>\n      <p>see all the stations you have played and created</p>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport './User.scss'\n\nexport default function User(props) {\n\tconst { user } = props;\n\n\n\treturn(\n\t\t<div className = \"User\">\n\t\t\t<h1 className = \"UserName\">{user?.name || 'USERS'}</h1>\n\t\t</div>\n\t)\n\n}\n","import React, { useState, useEffect } from 'react';\nimport './UsersList.scss';\nimport User from './User'\nimport RocketIcon from '../../Images/Rocket/rocket32p.png'\n\nexport default function Users(props) {\n\tconst { users } = props;\n\n\t//console.log(users)\n\t\n\n\treturn(\n\t\t<div className = \"Users\">\n\t\t\t{users.map(user => {\n\t\t\t\treturn <User key = {user.id} user={user} />\n\t\t\t})}\n\t\t\t<img className='Rocket' src={RocketIcon} />\n\t\t</div>\n\t)\n\n\t// return (\n\t// \t\t<div className = \"UsersList\">\n\t// \t\t{users.map(user => {\n\t// \t\t\treturn(\n\t// \t\t\t\t<User user = {user} />\n\t// \t\t\t)\n\t// \t\t})}\n\t// \t\t</div>\n\t// \t\t)\n}\n","import React, { useState } from 'react'\nimport firebase from '../../../firebase'\n//import getstation data from /Backend/StationDB\n\nexport default function Host (props) {\n  const { contentID } = props\n  const [img, setImg]  = useState()\n  const [vid, setVid] = useState()\n  const  [showVid, setShowVid] = useState(false)\n  const [showImg, setShowImg] = useState(false);\n  \n    function downloadImg () {\n      // Create a reference to the file we want to download\n      var storageRef = firebase.storage().ref()\n    \n      var starsRef = storageRef.child('images/' + contentID + '.jpg')\n      //console.log('getting img')\n      \n      // Get the download URL\n      const imgUrl = starsRef\n        .getDownloadURL()\n        .then(function (url) {\n          // Insert url into an <img> tag to \"download\"\n          setImg(url)\n          setShowImg(true)\n          console.log(\"in\")\n        })\n        .catch(function (error) {\n          // A full list of error codes is available at\n          //console.log(\"ig not downloaded\")\n        })\n  \n    }\n\n    function downloadVid (event) {\n      // Create a reference to the file we want to download\n      var storageRef = firebase.storage().ref()\n      var starsRef = storageRef.child('videos/' + contentID + '.mp4')\n      //console.log('getting vidd from ' + starsRef)\n      // Get the download URL\n      const vidUrl = starsRef\n        .getDownloadURL()\n        .then(function (url) {\n          // Insert url into an <img> tag to \"download\"\n          setVid(url)\n          setShowVid(true)\n        })\n        .catch(function (error) {\n          // A full list of error codes is available at\n          //console.log(\"vid not downloaded\")\n        })\n\n    }\n  \n    //console.log(contentID)\nif(contentID?.substr(0,3) == 'img' ){\n    downloadImg();\n}else if(contentID?.substr(0,3) == 'vid'){\n  //console.log(\"down\")\n    downloadVid();\n}\n\n\n  return (\n    <div className='ContentHost'>\n\n       <h1>Welcome</h1>\n\n        {showImg &&\n      <img width='320' height='240' src={img} />\n        }\n        {showVid && \n        <video width='320' height='240' controls>\n            <source src={vid} type='video/mp4' />\n          </video>\n        }\n      \n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport firebase from '../../../firebase'\nimport { addImgToStation, addVidToStation } from '../../../Backend/StationsDB'\nimport { Link } from 'react-router-dom'\nimport { Form } from 'react-advanced-form'\n\nexport default function Host (props) {\n  const {slideData, slideState, userData, slideNumber, setState,metaData, setData} = props\n\n  //console.log(slideData, slideState, users)\n\n    let responseCount = 0; \n    let voteCount = 0;\n    let votes = [];\n\n    for (let i = 0; i < metaData?.length; i++) {\n      votes[i] = 0;\n    }\n\n    for (let i = 0; i < userData.length; i++) {\n        const element = userData[i];\n        console.log(element)\n        if(element?.responses){\n            if(element?.responses[slideNumber]?.answer){\n                responseCount++;\n            }\n            if(typeof element?.responses[slideNumber]?.vote !== 'indefined'){\n                voteCount++;\n                votes[element?.responses[slideNumber]?.vote]++;\n            }\n        }\n    }\n\n    if(slideState == 'reset'){\n        setState('question')\n    }\n\n\n  //function\n  //if(userData.responses = userData.length){\n    //change slideState to 'showResponses'\n    //updateState(slideState)\n  \n\n    function DisplayResponse(user){\n      return (\n\n\n        <div className ='row'>\n          <div className=\"col s6 \">\n            <div className=\"card-panel\">\n              {user.responses[slideNumber].answer}\n            </div>\n          </div>\n        </div>\n      )\n\n    }\n\n\n  //updateResponse(responseData);\n\n  function ReadyButton(e){\n\n    let data = [];\n    for (let i = 0; i < userData.length; i++) {\n        const element = userData[i];\n        if(element?.responses){\n            if(element?.responses[slideNumber]?.answer){\n              data[i] = element.responses[slideNumber].answer;\n            }else{\n              data[i] = ''\n            }\n        }\n    }\n    data[userData.length] = slideData.answer\n    setData(data)\n    setState('responses')\n  }\n\n  function showVotes(){\n    setState('showVotes')\n\n\n  }\n  \n\n  return (\n    <div className='Fakeout container'>\n\n\n        {(slideState == 'question') && \n        <div>\n          <h1>{slideData.question}</h1>\n          <div>Responses: {responseCount}</div>\n          <button className='btn' onClick={ReadyButton}>Ready</button>\n        </div>\n       }\n\n\n        {(slideState == 'responses') && \n          <div>\n            <div>Votes: {voteCount}</div>\n          <button className='btn' onClick={showVotes}>Ready</button>\n\n                <div className ='row'>\n            {userData.map((element, num) => \n              <div> \n                  <div className=\"col s6 \">\n                    <div className=\"card-panel\">\n                      {element.responses[slideNumber].answer}\n                    </div>\n                  </div>\n                </div>\n            )}\n\n                  <div className=\"col s6 \">\n                    <div className=\"card-panel\">\n                      {slideData.answer}\n                    </div>\n                  </div>\n                </div>\n          </div>\n        }\n\n        {(slideState == 'showVotes') && \n          <div>\n            <div>Votes: {voteCount}</div>\n                <div className ='row'>\n            {metaData.map((element, num) => \n                  <div className=\"col s6 \">\n                    <div className=\"card-panel\">\n                      {element + '  (' + votes[num] + ')'} \n                    </div>\n                  </div>\n            )}\n              </div>\n\n          </div>\n        }\n        \n        {/* {(slideState == 'showResponses') && slideData.responses}\n\n\n        {(slideState == 'showAnswer') && slideData.responses} */}\n\n\n\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport './style.scss'\nimport { addToPlayerScore } from '../../../Backend/SessionsDB';\n\nexport default function multipleChoiceHost (props) {\n    const {sessionID, slideData, slideState, userData,  slideNumber, setState} = props;\n\n    let question = slideData.question;\n    let a = slideData.A;\n    let b = slideData.B;\n    let c = slideData.C;\n    let d = slideData.D;\n\n\n    let aans = slideData.Aans;\n    let bans = slideData.Bans;\n    let cans = slideData.Cans;\n    let dans = slideData.Dans;\n\n\n\n    let responseCount = 0; \n\n\n    console.log(\"this is user data\", userData);\n    console.log(\"this is slide data\", slideData)\n\n    \nfunction scoreChange(){\n\n    for (let i = 0; i < userData.length; i++) {\n        const user = userData[i]\n\n        if(user?.responses){\n\n            if(user?.responses[slideNumber]?.answer == \"A\" && (aans == true)){\n                console.log(\"add score to \" + user.name  + \" they have \" + user.score)\n                addToPlayerScore(sessionID, user.id, Number(slideData.points));\n\n                //addToResponseCounts\n                \n            }\n        }\n    }\n}\n\n\n\n    for (let i = 0; i < userData.length; i++) {\n        const element = userData[i];\n        //console.log(element);\n        if(element?.responses){\n            if(element?.responses[slideNumber]?.answer){\n                responseCount++;\n            }\n        }\n    }\n\n\n    if(slideState == 'reset'){\n        setState('question')\n    }\n\n    const Submit= (e) => {\n        e.preventDefault();\n        setState('answer')\n        scoreChange();\n\n    }\n\n\n    const Answer = (text, color) =>{\n        return (\n            <div className={\"Option\" + color}>\n                    <h3 className = \"text\"> {text} </h3> \n            </div>\n        )\n    }\n\n    const isAnswer = (text, correct) =>{\n\n        let color= \"red\";\n        if(correct){\n            color = \"green\";\n            //add score\n            //addToPlayerScore()\n        }\n\n        return (\n            <div className={\"Option\" + color}>\n                    <h3 className = \"text\"> {text} </h3> \n        <p>{ responseCount || \"(0)\"}</p>\n            </div>\n        )\n    }\n\n\n    return(\n<div className = \"MultipleChoiceHost\">\n\n    {slideState != 'answer' &&\n        <div className='MC'>\n                <h1 className = \"Question\">{question}</h1>\n                    <div className=\"Options\">\n                        {Answer(a, 'red')}\n                        {Answer(b, 'green')}\n                        {Answer(c, 'blue')}\n                        {Answer(d, 'yellow')}\n                    </div>\n                <button className=\"btn\" onClick={(e)=>Submit(e)}>Ready</button>\n                <div className =\"responses\">Responses: {responseCount}</div>\n        </div>\n    }\n\n    {(slideState == 'answer')&&\n        <div className=\"AnswerDisplay\" >\n            <h1 className = \"Question\">{question}</h1>\n            <div className=\"Options\">\n                {isAnswer(a,  aans)}\n                {isAnswer(b,  bans)}\n                {isAnswer(c,  cans)}\n                {isAnswer(d,  dans)}\n            </div>\n\n        </div>\n    }\n    \n</div>\n    )\n}","import React, { useState } from 'react'\n\nexport default function Host (props) {\n  const {users} = props\n  const [highScore, setHighScore] = useState(0)\n  const [scorer, setScorer] = useState(\"\")\n\n\n  console.log(users)\n\n\n  function getWinner() {\n      //go through users array and find user with highest score\n      for (let i = 0; i < users.length; i++) {\n        const user = users[i]\n\n        if(user?.responses){\n            if(user?.score > highScore){\n                console.log(\"he... \" + user.name  + \" has highest sscore off... \" + user.score)\n              setHighScore(user.score)\n              setScorer(user.name)\n           \n                \n            }\n        }\n    }\n  }\n\n  getWinner()\n\n  return (\n    <div className='EndGame'>\n      \n      <h1> End of game </h1>\n      <h3> Winner was {scorer} with...  {highScore} point(s)</h3>\n\n\n    </div>\n  )\n}\n","import React from \"react\";\n\nfunction Host(props) {\n  const { slideData, slideState, userData, slideNum, updateState } = props;\n  console.log(\"fick this\")\n  function Question() {\n    return (\n      <div>\n        <h3>{slideData.question}</h3>\n      </div>\n    );\n  }\n  \n  if (slideState === \"showQuestion\") {\n    return <Question />;\n  }\n\n  return <div>Not looking at if statement I guess...</div>;\n}\n\nexport default Host;\n","import React, { useState, useEffect } from 'react'\nimport firebase from '../firebase'\nimport {getStationData} from '../Backend/StationsDB'\nimport UsersList from '../Components/Users/UsersList'\nimport {incrementSlide, getUsersList, getSessionData, setSlideState, setMetaData, setGameOverDB} from '../Backend/SessionsDB'\nimport ContentHost from '../Components/Content/ContentPlayer/Host'\nimport FakeoutHost from '../Components/Fakeout/FakeoutPlayer/Host'\nimport MultipleChoiceHost from '../Components/MultipleChoice/MCPlayer/Host'\nimport EndGameHost from '../Components/EndGame/Host'\nimport DiscussionHost from '../Components/Discussion/DiscussionPlayer/Host'\nimport './GameHostPage.scss'\n\nexport default function GameHostPage (props) {\n    const {sessionID} = props.match.params;\n \n const [session, setSession] = useState({})\n   const [station, setStation] =  useState({})\n  const [users, setUsers] = useState([])\n\n\n  useEffect(() => {\n    getSessionData(handleSessionChange, sessionID)\n  }, [sessionID])\n  function handleSessionChange(sessionData){\n    setSession(sessionData)\n  }\n\n  useEffect(() => {\n    getUsersList(handleUsersRefresh, sessionID)\n  }, [sessionID, session])\n  function handleUsersRefresh(userData){\n    setUsers(userData.docs.map(doc => ({ ...doc.data(), id: doc.id })))\n  }\n\n\n  useEffect(() => {\n    async function getStation (stationID) {\n        if(stationID != undefined){\n            const stationData = await getStationData(stationID)\n            setStation(stationData)\n        }\n    }\n    getStation(session?.stationID)\n  }, [sessionID, session])\n\n\n\n\n\n\n\n\n\n  function setState(state)\n  {\n    setSlideState(sessionID, state)\n  }\n\n    function setData(data){\n      setMetaData(sessionID, data);\n    }\n\n\n  function nextSlide(){\n    //console.log(sessionID)\n    if(station.slides.length -1 > session.slideNum){\n        incrementSlide(sessionID);\n        setState('reset')\n    }\n    else{\n      setGameOverDB(sessionID);\n    }\n\n  }\n\n  // console.log(station)\n  // console.log(session)\n  // console.log(session?.stationID)\n   //console.log(users)\n\n\n\n\n\n  return (\n    <div className=\"GameHostPage\">\n\n      {/* lobby */}\n      {session?.slideNum == -1 && users?.length >= 0 && (\n        <div>\n          <h1>Boarding..</h1>\n          <h2>{sessionID}</h2>\n          <h5>enter code on device and join</h5>\n        </div>\n      )}\n      {/* users */}\n      {session?.slideNum == -1 && users?.length >= 0 && (\n        <UsersList sessionID={sessionID} users={users} />\n\n      )}\n\n\n\n      {/* slide types */}\n      {station?.slides &&\n        session?.slideNum >= 0 &&\n        station?.slides[session.slideNum].type == \"content\" &&\n        (session?.gameOver == false) && (\n          <h1>{\"on slide \" + session.slideNum + \" its a img or vid\"} </h1>\n        ) && (\n          <ContentHost contentID={station.slides[session.slideNum].fileName} />\n        )}\n\n\n      {station?.slides &&\n        session?.slideNum >= 0 &&\n        station?.slides[session.slideNum].type == \"fakeout\" &&\n        (session?.gameOver == false)&& (\n          <h1>{\"on slide \" + session.slideNum + \" its a fakeout\"} </h1>\n        ) && (\n          <FakeoutHost\n            slideData={station.slides[session.slideNum]} slideState ={session.state} userData = {users} metaData={session.MetaData} slideNumber={session.slideNum} setState={setState} setData={setData}/>\n        )}\n\n      {station?.slides && session?.slideNum >= 0 && (station?.slides[session.slideNum].type == 'multipleChoice') &&\n        <h1>{'on slide ' + session.slideNum + ' its a MC'} </h1> &&\n        <MultipleChoiceHost sessionID = {sessionID} slideData={station.slides[session.slideNum]} slideState={session.state} userData={users} slideNumber={session.slideNum} setState={setState} />\n      }\n\n      {station?.slides &&\n        session?.slideNum >= 0 &&\n        station?.slides[session.slideNum].type == \"discussion\" &&\n        (session?.gameOver == false) && (\n          <h1>{\"on slide \" + session.slideNum + \" its a discussion\"} </h1>\n        ) && (\n          <DiscussionHost\n            slideData={station.slides[session.slideNum]}\n            slideState=\"showQuestion\"\n            userData={users}\n          />\n        )}\n\n        \n      {(session?.gameOver == false) && <button onClick={nextSlide}> Next Slide </button>}\n\n\n\n\n      {/* end game */}\n      {(session?.gameOver == true) && <EndGameHost users={users} />}\n\n\n    </div>\n  );\n}\n\n\n\n","import React, { useState } from 'react'\nimport firebase from '../../../firebase'\n//import getstation data from /Backend/StationDB\n\nexport default function User (props) {\n  const { contentID } = props\n  const [img, setImg]  = useState()\n  \n    function downloadImg () {\n      // Create a reference to the file we want to download\n      var storageRef = firebase.storage().ref()\n    \n      var starsRef = storageRef.child('images/' + contentID + '.jpg')\n      //console.log('getting img')\n  \n      // Get the download URL\n      const imgUrl = starsRef\n        .getDownloadURL()\n        .then(function (url) {\n          // Insert url into an <img> tag to \"download\"\n          setImg(url)\n          //console.log(\"in\")\n        })\n        .catch(function (error) {\n          // A full list of error codes is available at\n          //console.log(\"not in\")\n        })\n  \n    }\n\n    downloadImg();\n\n\n  return (\n    <div className='ContentHost'>\n\n      <img width='320' height='240' src={img} />\n      \n    </div>\n  )\n}","import React, { useState, useEffect} from 'react'\nimport firebase from '../../../firebase'\nimport { addImgToStation, addVidToStation } from '../../../Backend/StationsDB'\nimport { Link } from 'react-router-dom'\nimport { Form } from 'react-advanced-form'\n\nexport default function User (props) {\n  const {slideData, slideState, updateResponse, metaData} = props\n\n  const [localState, setLocalState] = useState('question')\n  const [response, setResponse] = useState('');\n\n  function saveResponse(e){\n        updateResponse({answer: response});\n        setLocalState('standby')\n        console.log(\"save it\")\n  }\n\n  function vote(id)\n  {\n        updateResponse({answer: response,\n                        vote: id});\n\n  }\n\n  useEffect(() => {\n        setLocalState('question');\n  }, [slideState])\n\n  return (\n    <div className='Fakeout'>\n\n        {(slideState == 'question') && localState =='question' &&\n        <div>\n            <h1>{slideData.question}</h1>\n            \n            <div class=\"input-field\">\n              <label> Enter a lie: </label>\n              <input type=\"text\" value={response} onChange={e => {setResponse( e.currentTarget.value )}} />\n            </div>\n\n              {/* input */}\n            <button onClick = {saveResponse}>saveResponse</button>\n          </div>\n        \n        }\n        {(slideState == 'question') && localState !='question' &&\n            <div className=\"card-panel\" >\n                    <h3>Waiting for Host...</h3>\n            </div>\n        }\n\n\n        \n         {(slideState == 'responses') && localState =='question' &&\n          <div>\n            responces\n            <div>\n            {metaData.map((element, num) => \n              <div className='btn' onClick={e=>vote(num)} key={num}> \n                {element}\n              </div>\n            )}\n\n            </div>\n          </div>\n         }\n\n        {(slideState == 'responses') && localState !='question' &&\n            <div className=\"card-panel\" >\n                    <h3>Vote Submitted...</h3>\n            </div>\n        }\n         {/* //show the responses in buttons\n         onclick(saveAnswer)\n         */}\n\n        {(slideState == 'showVotes') && \n        <div>\n            <div className=\"card-panel\" >\n                    <h3>Waiting on Host...</h3>\n            </div>\n          \n        </div>\n        }\n\n\n\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport {addToPlayerScore} from '../../../Backend/SessionsDB'\nimport './style.scss'\n\n\nexport default function MultipleChoiceUser (props) {\n    const {sessionID, slideNum, slideData, State, updateResponse, user} = props;\n\n    const [localState, setLocalState] = useState('question')\n\n\n    let question = slideData.question;\n    let a = slideData.A;\n    let b = slideData.B;\n    let c = slideData.C;\n    let d = slideData.D;\n\n    let aans = slideData.Aans;\n    let bans = slideData.Bans;\n    let cans = slideData.Cans;\n    let dans = slideData.Dans;\n\n\n    const [correct, setCorrect] = useState(false)\n\n\n    \n\n\n useEffect(() => {\n    if(State == 'reset')\n    {\n        setLocalState('question');\n    }\n  }, [State])\n    \n    const submit= (e, id) => {\n        e.preventDefault();\n        //props.submit(id);\n\n\n\n        console.log(\"selectedddd!\" + id)\n        setLocalState('standby')\n        updateResponse({answer: id})\n\n        console.log(\"LOOK\" + aans + id)\n        if(aans && 'A' ==id){\n            setCorrect(true);\n        }\n        else if(bans && 'B' ==id){\n            setCorrect(true);\n        }\n        else if(cans && 'C' ==id){\n            setCorrect(true);\n        }\n        else if(dans && 'D' ==id){\n            setCorrect(true);\n        }\n        else{\n            setCorrect(false)\n        }\n    }\n\n\n    const Answer = (id, text, color) =>{\n        return (\n            <div className={\"Option\" + color} onClick={(e)=>submit(e, id)}>\n                    <h3 className={\"text\"}> {text} </h3> \n            </div>\n            //<div className={\"btn btn-large col s6 \" + color} onClick={(e)=>submit(e, id)} >{text}</div>\n        )\n    }\n\n\n\n    const isAnswer = (id, text, correct) =>{\n        console.log(correct)\n\n        let color= \"red\";\n        if(correct){\n            color = \"green\";\n            console.log(\"ans\" + text)\n\n        }\n\n\n        return (\n            <div className={\"Option\" + color}>\n                    <h3 className={\"text\"}> {text} </h3> \n            </div>\n        )\n    }\n// console.log(user)\n// console.log(slideData)\n\n\n    return(\n        <div className = \"User\">\n            {(localState == 'question')&& (State == 'question')&&\n\n                <div className=\"Question\" >\n                    <h1>{question}</h1>\n                    <div className=\"Options\">\n                        {Answer('A', a, 'red')}\n                        {Answer('B', b, 'green')}\n                        {Answer('C', c, 'blue')}\n                        {Answer('D', d, 'yellow')}\n                    </div>\n                </div>\n            }\n\n            {(localState == 'standby')&&(State == 'question')&&\n            \n                <div className=\"Wait\" >\n                    <h3>Waiting for Host...</h3>\n                </div>\n            }\n\n            {(State == 'answer')&&\n\n                <div className=\"Answer\" >\n                    <h1>{question}</h1>\n                    <div className=\"Options\">\n                        {isAnswer('A', a,  aans)}\n                        {isAnswer('B', b,  bans)}\n                        {isAnswer('C', c,  cans)}\n                        {isAnswer('D', d,  dans)}\n                    </div>\n\n                    <div>\n                    {correct && <h2>Correct</h2>}\n                    {!correct && <h2>Incorrect</h2>}\n                    </div>\n\n                </div>\n            }\n\n        </div>\n\n    )\n\n}","import React, { useState } from 'react'\n\nexport default function User (props) {\n  const {user} = props\n\n  //console.log(user)\n\n  return (\n    <div className='EndGame'>\n      \n      <h1> End of game </h1>\n      <h3> Congrats you had {user.score} point(s)! </h3>\n\n\n    </div>\n  )\n}\n","import React, {useState} from \"react\";\n\nfunction User(props) {\n  const {slideData, updateResponse} = props\n  const [response, setResponse] = useState('')\n\n  function submitResponse(e) {\n    e.preventDefault()\n    const responseData = {\n      response: response\n    }\n    updateResponse(responseData)\n    setResponse('')\n    console.log(\"submit button clicked!\")\n  }\n\n  return (\n    <div className=\"card\">\n      <h3>{props.slideData.question}</h3>\n      <textarea id=\"response\" value={response} onChange={e => setResponse(e.currentTarget.value)}/>\n      <button onClick={e => submitResponse(e)}>Submit</button>\n      {response}\n    </div>\n  );\n}\n\nexport default User;\n","import React, { useState } from 'react'\nimport firebase from '../../firebase'\nimport ColorSelect from './ColorSelect'\nimport './PlayerEditor.scss'\nimport Player from '../../Images/Icons/profile.png'\n\n\n\n\nexport default function PlayerEditor (props) {\nconst {user} = props\n  //CONTENT\n\n  function changeColor (event) {\n    console.log(\"chanigng color\")\n  }\n\n\nfunction saveUserColor(event){\n    console.log(\"saving color\")\n    return null\n}\n\n//console.log(user?.name)\n  \n\n\n  return (\n    <div className='PlayerEditor'>\n        <h1> {user?.name || \"none\"}\n        </h1>\n        <img className='Player' src={Player} />\n        <h2> {user?.score  || \"0\"}   </h2>\n\n\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport {getSessionData, addUserResponse, addUserToSession, getUserData, listenUserData} from '../Backend/SessionsDB'\nimport {getStationData} from '../Backend/StationsDB';\nimport ContentUser from '../Components/Content/ContentPlayer/User'\nimport FakeoutUser from '../Components/Fakeout/FakeoutPlayer/User'\nimport MultipleChoiceUser from '../Components/MultipleChoice/MCPlayer/User';\nimport EndGameUser from '../Components/EndGame/User'\nimport DiscussionUser from '../Components/Discussion/DiscussionPlayer/User'\nimport PlayerEditor from '../Components/Player/PlayerEditor'\n\nexport default function GameUserPage (props) {\n    const {sessionID, userID} =\n props.match.params;\n const [session, setSession] = useState({})\n const [station, setStation] = useState({})\n const [user, setUser] = useState({})\n\n  function handleSessionChange(sessionData){\n    setSession(sessionData)\n  }\n  \n  useEffect(() => {\n    getSessionData(handleSessionChange, sessionID)\n  }, [sessionID])\n\n  function onUserUpdate(userData){\n      //console.log('user Data update: ');\n      //console.log(userData);\n      setUser(userData);\n  }\n  useEffect(() => {\n    listenUserData(sessionID, userID, onUserUpdate)\n  }, [userID])\n\n\n  useEffect(() => {\n    async function getStation (stationID) {\n        if(stationID != undefined){\n            const stationData = await getStationData(stationID)\n            setStation(stationData)\n        }\n    }\n    getStation(session?.stationID)\n  }, [session])\n\n    //  console.log(session)\n    \n    // console.log(user)\n\n\n    function updateResponse(responseData){\n     // console.log(user)\n      let newResponses = user.responses;\n\n      if(!newResponses){\n        //console.log('epmty');\n        newResponses = []\n      }\n\n      for (let i= 0; i < session.slideNum; i++) {\n        const element = newResponses[i];\n        if(!element){\n          newResponses[i] = {};\n        }\n      }\n\n      //console.log(\"RESPNESE\", responseData)\n      \n\n      newResponses[session.slideNum] = responseData;\n        //console.log(newResponses);\n      addUserResponse(sessionID, userID, newResponses);\n      \n    }\n\n\n  return (\n    <div className=\"GameUserPage\">\n      {session?.slideNum == -1 && (\n        <div>\n          <h1>{\"Welcome \" + user?.name}</h1>\n          <h2>Waiting for launch..</h2>\n          <h4>This is the {station?.title} station</h4>\n        </div>\n      )}\n\n\n      {session?.slideNum >= -1 && (\n        <div>\n          <PlayerEditor  user = {user} />\n        </div>\n      )}\n\n      {(station?.slides &&\n        session?.slideNum >= 0 &&\n        station?.slides[session.slideNum].type == \"content\" && session?.gameOver == false) && (\n          <div>\n            <ContentUser contentID={station.slides[session.slideNum].fileName} />\n          </div>\n        )}\n\n      {station?.slides &&\n        session?.slideNum >= 0 &&\n        station?.slides[session.slideNum].type == \"fakeout\" && (\n          <div className=\"Fakeout\">\n            <FakeoutUser slideData={station.slides[session.slideNum]} slideState={session.state} updateResponse={updateResponse} metaData={session.MetaData}/>\n          </div>\n        )}\n\n          {(station?.slides &&  session?.slideNum >= 0 && (station?.slides[session.slideNum].type == 'multipleChoice')) &&\n          <div>\n            <MultipleChoiceUser sessionID = {sessionID} slideNum = {session.slideNum} slideData={station.slides[session.slideNum]} State={session.state} updateResponse={updateResponse} user = {user}/>\n          </div>\n          }\n\n      {station?.slides &&\n        session?.slideNum >= 0 &&\n        station?.slides[session.slideNum].type == \"discussion\" && (\n          <div className=\"Discussion\">\n            <DiscussionUser slideData={station.slides[session.slideNum]} updateResponse={updateResponse}/>\n          </div>\n        )}\n\n          {/* end game add check to see if Game is over or session session.gameOver == true && */}\n          {(session?.gameOver && session.gameOver == true)  &&\n            <EndGameUser user = {user} />\n            }\n\n\n    </div>\n  );\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport AuthRoute from './AuthRoute'\nimport HomePage from './Pages/Home/HomePage'\nimport ProfilePage from './Pages/Profile/ProfilePage'\nimport CreatePage from './Pages/Create/CreatePage'\nimport CreateStationPage from './Pages/Create/CreateStation/CreateStationPage'\nimport FindPage from './Pages/Find/FindPage'\nimport JoinPage from './Pages/Join/JoinPage'\nimport MyStationsPage from './Pages/MyStations/MyStationsPage'\nimport GameHostPage from './GamePlay/GameHostPage'\nimport GameUserPage from './GamePlay/GameUserPage'\n\nexport default function Routes () {\n  return (\n    <div className='routes'>\n      <Route exact path='/' component={HomePage} />\n      <Route exact path='/profile' component={ProfilePage} />\n      <Route exact path='/create' component={CreatePage} />\n      <Route exact path='/create/:stationID' component={CreateStationPage} />\n      <Route exact path='/find' component={FindPage} />\n      <Route exact path = '/play/host/:sessionID' component = {GameHostPage} />\n      <Route exact path = '/play/user/:sessionID/:userID' component = {GameUserPage} />\n      <Route path='/join' component={JoinPage} />\n      <Route exact path='/myStations' component={MyStationsPage} />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport './NavBar.scss'\nimport Logo from '../Images/Icons/logof.png'\nimport NavMenu from '../Images/Icons/menu1.png'\nimport Auth from '../Auth'\n\nexport default function NavBar () {\n  const [isExpanded, setIsExpanded] = useState(true)\n  const [profileIcon, setProfileIcon] = useState()\n\n  useEffect(() => {\n    async function getProfileImg () {\n      const profileImg = await Auth.getProfileImg()\n      setProfileIcon(profileImg)\n    }\n    getProfileImg()\n  }, [profileIcon])\n\n  // const profileImg =\n  // THIS IS A WORKING GIT REPOSITORY\n  // Auth.getProfileImg()\n\n  function expandNavbar () {\n    //console.log('something')\n    setIsExpanded(!isExpanded)\n  }\n\n  return (\n    <div className='NavBar'>\n\n      <div className='Expander'>\n        <button onClick={expandNavbar} className='ExpandButton'>\n          <img className='ExpandIcon' src={NavMenu} />\n        </button>\n      </div>\n\n      <div className='MainNav'>\n        <div className='LogoLink'>\n          <NavLink to='/'>\n            <img className='LogoIcon' src={Logo} />\n          </NavLink>\n        </div>\n        <div className='ProfileLink'>\n          <NavLink activeClassName='active' to='/profile'>\n            <img className='ProfileIcon' src={profileIcon} />\n            <h1 className='Text'> profile </h1>\n          </NavLink>\n        </div>\n      </div>\n      <div\n        className={isExpanded ? 'SecNav' : 'MobileNav'}\n        onClick={expandNavbar}\n      >\n        <div>\n          <NavLink className='CreateLink' activeClassName='active' to='/create'>\n            <h5 className='Text'> create </h5>\n          </NavLink>\n        </div>\n        <div className='FindLink'>\n          <NavLink activeClassName='active' to='/find'>\n            <h5 className='Text'>find</h5>\n          </NavLink>\n        </div>\n        <div className='JoinLink'>\n          <NavLink activeClassName='active' to='/join'>\n            <h5 className='Text'> join</h5>\n          </NavLink>\n        </div>\n        <div className='MyStationsLink'>\n          <NavLink activeClassName='active' to='/myStations'>\n            <h5 className='Text'>my stations</h5>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\nReactDOM.render(\n<Router>\n    <App />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport './App.scss'\nimport Routes from './Routes'\nimport NavBar from './NavBar/NavBar'\n\nexport default function App () {\n  return (\n    <div className='App'>\n      <div className='Nav'>\n        <NavBar />\n      </div>\n      <div className='PageContent'>\n        <Routes />\n      </div>\n    </div>\n  )\n}\n"],"sourceRoot":""}